[{"content":"需求：每小时取一次内存，并传回本地笔记本中。\n树莓派版本如下，内存1GB，系统版本Ubuntu，内核版本armv7l\narm架构使用lime来转储内存，需要编译模块。浏览编写需要的资源，发现已经有内核src文件了，但缺少头文件，树莓派下的linux_headers安装于其他平台不同，需要使用sudo apt install raspberrypi-kernel-headers命令安装\nWindows（//192.168.1.10/mem）目录共享到树莓派，并挂载到/mnt/mem，取的内存将存入/mnt/mem\n把lime命令写入转储脚本，使用crontab定时执行转储脚本，也可以命令直接写入coon，如每小时的30分的时候取一次30 * * * * sudo insmod /tmp/lime-5.15.76-v7+-armv7l.ko \u0026quot;path=/mnt/mem/limedate \u0026ldquo;+%Y-%m-%d_%H%m\u0026rdquo; format=lime\u0026quot; \u0026amp;\u0026amp; sodu rmmon lime\n计划任务结果，每一小时执行取一次内存\n","permalink":"http://localhost:1313/posts/arm%E5%86%85%E5%AD%98%E5%AE%9A%E6%97%B6%E8%BD%AC%E5%82%A8/","summary":"\u003cp\u003e需求：每小时取一次内存，并传回本地笔记本中。\u003c/p\u003e\n\u003cp\u003e树莓派版本如下，内存1GB，系统版本Ubuntu，内核版本armv7l\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://image-1253434595.cos.ap-chengdu.myqcloud.com/img/202409241120216.png\" alt=\"\"  /\u003e\r\n\u003c/p\u003e\n\u003cp\u003e\u003cfont style=\"color:rgb(79, 79, 79);\"\u003earm架构使用lime来转储内存，需要编译模块。浏览编写需要的资源，发现已经有内核src文件了，但缺少头文件，树莓派下的linux_headers安装于其他平台不同，需要使用\u003c/font\u003e\u003ccode\u003esudo apt install raspberrypi-kernel-headers\u003c/code\u003e命令安装\u003c/p\u003e","title":"arm定时转储"},{"content":"在web攻击中很可能会涉及数据库相关痕迹，数据库分为关系型数据库和非关系型数据库，本文以典型的关系MSSQL、MYSQL举例子，认识取证的目标、熟悉数据库取证是的实际操作与数据库还原恢复方法。\nMS SQL数据库取证 0x1、MS SQL系统数据库 Master:是整个数据库服务器的核心。记录SQLServer系统的所有系统级信息，例如:登陆账户信息、链接服务器和系统配置设置、记录其他所有数据库的存在、数据文件的位置、SQL Server的初始化信息等。如果master数据库不可用，则无法启动SQL Server.\nmode:用作SQL Server实例上创建的所有数据库的模板。\nMsdb:用于SQLServer代理计划警报和作业。数据库定时执行某些操作、数据库邮件等。\ntempdb是 SQL Servert中的一个临时数据库，用于存放临时对象或中间结果，SQLServer关闭后，该数据库中的内容被清空，每次重新启动服务器之后，tempdb数据库将被重建。\n0x2、MS SQL数据库组成 数据库文件：指数据库中用来存放数据库数据和数据库对象的文件，包括主数据库文件和次数据库文件主数据库文件扩展名为.mdf，次数据文件扩展名为.ndf 日志文件：记录了存储数据库的更新情况等事务日志信息，包括用户对数据库进行的插入、删除和更新等操作，当数据库发生损坏时或者数据丢失时，可以根据日志文件来分析出错的原因和使用事务日志恢复数据库，日志文件扩展名为.df 一个数据库可以有一个或多个数据库文件，一个数据库文件只能属于一个数据库\n当有多个数据库文件时，有一个文件被定为主数据库文件，它用来存储数据库的启动信息和部分或者全部数据\n一个数据库只能有一个主数据库文件一个数据库可以没有次数据文件，也可能有多个次数据文件\n一个数据库至少必须拥有一个事务日志文件，而且允许拥有多个日志文件\n0x3、MS SQL数据库导出 方法一、可以直接拷贝数据库文件，执行下面sql查询数据库文件保存的位置\nselect FileName from master..sysdatabases where name = 'SIAN';\n直接拷贝数据库文件，但会报错文件被其他程序占用，所以拷贝前要对数据库脱机、分离、停止服务。这时可以使用winhex建立磁盘快照再正常导出文件，不仅快又不需要数据库脱机。\n方法二、导出sql数据文件\nSQLServer提供生成包含数据的脚本工具，使用数据库连接工具如SQL Server Management Studio，生成脚本\n高版本数据库迁移到低版本数据库时，还需要选择服务器版脚本为对应的版本\n然后一直下一步，等待完成，最终数据会按表每条记录生成一条insert的语句，如下图。\n方法三、备份数据库\n0x4、MS SQL数据库恢复 1、如获取到sqlserver的数据库文件ldf和mdf文件\n把mdf文件和ldf文件拷贝到自己搭建的数据库的默认路径C:\\Program Files\\Microsoft SQL Server\\MSSQL14.MSSQLSERVER\\MSSQL\\DATA里；\n在sqlserver里新建个查询，执行下面附加sql，将建立SIAN的数据库并附加数据库文件；\nUSE master; GO CREATE DATABASE SIAN ON (FILENAME = \u0026#39;C:\\Program Files\\Microsoft SQL Server\\MSSQL14.MSSQLSERVER\\MSSQL\\DATA\\SIAN.mdf\u0026#39;), (FILENAME = \u0026#39;C:\\Program Files\\Microsoft SQL Server\\MSSQL14.MSSQLSERVER\\MSSQL\\DATA\\SIAN_log.ldf\u0026#39;) FOR ATTACH; GO 刷新数据库，就出现了新的数据库SIAN；根据mdf文件和ldf文件还原成功！\n2、如取的是sql脚本\n创建对应同名数据库 执行脚本还原数据库 刷新数据库，查看创建的表及插入的数据 3、如果获取的备份文件\n创建同名数据库 还原数据库，选择覆盖现有数据库 MYSQL数据库取证 0x1、mysql数据库 MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，2008年，MySQL AB公司被Sun Microsystems收购，2009年sun又被甲骨文公司收购,现属于Oracle旗下产品。MySQL被收购之后，面临着被闭源的风险，因此MySQL之父 Widenius离开Sun之后，2009年重新开发代码全部开源免费关系型数据库，推出了MariaDB。\n据调研，目前Oracel已经对MySQL进行了闭源，开源的CentOS7已经不支持MySQL，而换成了的MariaDB。如果用户需要在CentOS7上安装MySQL需要先将MariaDB卸载掉，否则就会导致安装冲突。\nmysql安装默认自带4个数据库，information_schema、mysql、performance_schema、sys。\n0x2、mysql数据库导出 方法一、mysqldump\n通过mysqldump全量备份数据库，这个工具可以直接导出mysql数据库的内容和结构。\n# 导出test库的res表 mysqldump -h localhost -u root -p -P 3306 --single-transaction --databases test --tables res \u0026gt; res.sql # 导出test整个库 mysqldump -h localhost -u root -p -P 3306 --single-transaction --databases test \u0026gt; test.sql # 导出所有库 mysqldump -h localhost -u root -p -P 3306 --single-transaction --all-databases \u0026gt; test.sql # 导入sql到数据库(需要先创建数据库) mysql -h localhost -u root -p -P 3306 --database test \u0026lt; test.sql 方法二、通过复制MySQL安装目录下的data文件夹进行备份\n将复制的data文件粘贴到新的MySQL安装目录下，该方式必MySQL版本必须和原数据库版本一致。如果版本不一致需要重构存储表结构\n# 查看数据库版本 select -version # 查询具体的数据文件路径 show global variables like \u0026#34;%datadir%\u0026#34;; 如上图中test目录就是创建的数据库\n数据目录：/var/lib/mysql 每个数据库都有一个子目录，其名称对应数据库名称。 每个数据库目录下包含表数据文件（例如 .ibd 文件）、定义文件（例如 .frm 文件）等。 方法三、使用第三方管理软件导出数据\n这里使用dbeaver操作，具体如下\n0x3、mysql数据库恢复 .sql类型文件也称为SQL脚本，通常由一系列SQL语句组成，可使用任何文本编辑器进行编辑和查看，一般是通过命令行工具mysqldump或Navicat等数据库连接工具导出的备份文件。此类型文件导入数据库的操作比较简单,主要有两种方法。\n第一种方法是使用系统自带的命令提示符功能导入。打开命令提示符界面，输入 “mysql -u 用户名 -p”，再输入MySQL的登录密码后即可连接到MySQL数据库；使用 “use 数据库名;”切换到想要导入的的数据库。\n第二种方法是使用数据库连接工具进行导入。\n.nb3是MySQL数据库中的一种数据文件格式，通过存储引擎MyISAM进行创建和管理，此格式文件可以压缩数据，从而减少数据在磁盘中的占用空间。.nb3类型文件比较少见，通常是由Navicat连接工具导出的整个数据库备份文件。此类型文件导入数据库较简单，由于是连接工具导出的备份文件，所以只能通过连接工具导入数据库。\nMySQL创建表时选择不同的存储引擎，生成的数据文件也会不同。最常见的MySQL引擎包括MyISAM和InnoDB，MyISAM是MySQL 5.5.8版本之前的默认引擎, 在MySQL 5.5.8以后的默认存储引擎是InnoDB。\n在对数据库进行重构时，MyISAM是可以直接复制使用的，但InnoDB不行，需要进行表结构与表数据的修复。InnoDB生成**.frm和.ibd两个文件，其中.frm文件用于存储表结构，.ibd文件用于存储表数据。MyISAM生成.frm**、.myd还有**.myi三个文件，.frm文件也是用于存储表结构，.myd用于存储数据，.myi**用于存储索引文件。MyISAM生成的3个文件直接拖入创建的新数据库文件路径中即可查看数据，而InnoDB引擎生成的2个文件复制到新数据库目录中找不到表结构和数据。此时，需要对表结构进行恢复后再把数据文件导入表中。\n总结 Database Details Path/Command MySQL Windows 数据文件路径 %appdata%\\MySQL Server 5.1\\data Linux 数据文件路径 /var/lib/mysql/ 指令 show global variables like \u0026quot;%datadir%\u0026quot;; Oracle Windows 数据文件路径 D:\\app\\test\\oradata\\test Linux 数据文件路径 /home/oracle/oradata/orcl/ 指令 select name from v$datafile;//查询表空间中数据文件具体位置 select * FROM DBA_DATA_FILES;//查询表空间中数据文件具体位置和文件名，表空间名等 SQL Server 数据文件路径 C:\\Program Files\\Microsoft SQL Server\\MSSQL10_50.SQLEXPRESS\\MSSQL\\DATA PostgreSQL Windows 数据文件路径 C:\\Program Files\\PostgreSQL\\10\\data Linux 数据文件路径 /var/lib/postgres/data 或 /home/postgres/data ","permalink":"http://localhost:1313/posts/%E5%B8%B8%E8%A7%81%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%96%E8%AF%81/","summary":"\u003cp\u003e在web攻击中很可能会涉及数据库相关痕迹，数据库分为关系型数据库和非关系型数据库，本文以典型的关系MSSQL、MYSQL举例子，认识取证的目标、熟悉数据库取证是的实际操作与数据库还原恢复方法。\u003c/p\u003e\n\u003ch1 id=\"ms-sql数据库取证\"\u003eMS SQL数据库取证\u003c/h1\u003e\n\u003ch2 id=\"0x1ms-sql系统数据库\"\u003e0x1、MS SQL系统数据库\u003c/h2\u003e\n\u003cp\u003eMaster:是整个数据库服务器的核心。记录SQLServer系统的所有系统级信息，例如:登陆账户信息、链接服务器和系统配置设置、记录其他所有数据库的存在、数据文件的位置、SQL Server的初始化信息等。如果master数据库不可用，则无法启动SQL Server.\u003c/p\u003e","title":"常见数据库取证"},{"content":"0x1、概述 在研究学习Windows程序逆向的时候，遇到文件加解密。加解密比价贴合实际工作，特别是APT的二次下载样本、shellcode、C\u0026amp;C等又如键盘记录、屏幕截图等，网络传输数据流都有很大概率是加密的。\n如下面恶意代码，从自身资源节中释放加密文件，再将释放的文件就行解密，最后将解密出来的pe文件注入到svchost进程中。\n0x2、加解密 一般简单的加密算法识别，可以从文件结构入手，其中最重要的就是文件头，文件头是已知的数据，可以使用文件头进行算法猜测或者爆破。\nbaes64：填充字符，如果输入数据的长度不是 3 的倍数，Base64 编码会在编码后的结果末尾添加**一个或两个等号（=）**作为填充字符，以确保编码后的字符串长度是 4 的倍数，另外样本中可能会有标准Base64表。 xor：异或加密只需要一个字符即可，单字节加密可通过暴力破解来解密（暴力破解识别） 凯撒：古老且简单的算法，字符串向右移动字符，偏移量是一个整数，在 0 到 25 之间，简单爆破可解。 。。。。。。 因为涉及到解密，样本中使用对称加密算法居多，加密与解密的密钥相同，常见的对称加密算法是AES和DES。\nAES：AES 是块加密算法，每次处理 128 位（16 字节）的数据块。数据块被分为多个 4x4 的字节矩阵进行处理。x[j]=si%4] 循环4次 s[i][j]=x[j] 循环4次 整体循环4次(行位移）\n非对称加密是指加密和解密使用密钥不同，一般使用公钥加密，私钥解密，常用openssl。在样本分析中只有提取私钥才能解密文件或者网络流量。\nRSA：生成的私钥文件默认开头为“\u0026mdash;\u0026ndash;BEGIN OPENSSH PRIVATE KEY\u0026mdash;\u0026ndash;”，结尾为“\u0026mdash;\u0026ndash;END OPENSSH PRIVATE KEY\u0026mdash;\u0026ndash;”，内容可能使用**=**号补位\n0x3、解密方法 案列\n看一个Windows程序样本，抓包发现它接收指令，然后返回加密的数据到cc，解析它的加解密算法。\n使用工具\nIDA pro静态，静态分析反编译工具（插件工具如FindCrypt2、KANAL） Ollydebug，动态分析反编译工具 步骤\n1、使用PEID的KANAL插件查看发现AES加密特征（RIJNDAEL算法就是AES）\n2、跳转面的地址00401E95所在的函数，发现大量计算，代码中出现 4*的计算，疑似AES加密块\n3、交叉应用发现，该函数在main中被调用，调用push将key压栈，所以AES加密key就是16字节的字符串\u0026quot;ijklmnopqrstuvwx\u0026quot;\n4、main函数，初始化网络与cc建立连接socks，由sub_401AC2加密，sub_4015B7主要实现管道的输入和输出、进程线程创建。\n编写流量解密脚本，拷贝流量中返回的载荷\n脚本如下，但解出来编码不知道为什么很奇怪，使用x32dbg调式看看\n另外还有其他方法，加密函数处下断点，找到缓冲区的数据buf，然后将它们提取出来，利用winHex进行复制另存到一个文件中，然后再与加密后的数据进行对比，后面再研究看看。\n","permalink":"http://localhost:1313/posts/%E6%A0%B7%E6%9C%AC%E8%A7%A3%E5%AF%86/","summary":"\u003ch2 id=\"0x1概述\"\u003e0x1、概述\u003c/h2\u003e\n\u003cp\u003e在研究学习Windows程序逆向的时候，遇到文件加解密。加解密比价贴合实际工作，特别是APT的二次下载样本、shellcode、C\u0026amp;C等又如键盘记录、屏幕截图等，网络传输数据流都有很大概率是加密的。\u003c/p\u003e\n\u003cp\u003e如下面恶意代码，从自身资源节中释放加密文件，再将释放的文件就行解密，最后将解密出来的pe文件注入到svchost进程中。\u003c/p\u003e","title":"流量、样本解密"},{"content":"itunes backup\n手机输入密码新人设备，信任文件保存在电脑中\n注意：信任文件会因版本升级、系统重启等因素失效\n建议使用加密备份，获取的信息更加全面\n备份完成后的存储路径%USERPROFILE%\\Apple\\MobileSync\\Backup下的设备UDID文件夹中。\nmvt（Mobile Verification Toolkit）\nOxygen Forensic Suite，支持对手机基本信息、SIM卡信息、联系人列表、组信息、快速拨号、通话记录、短消息、短信中心时间戳、日历、待办事项、文本便签、照片、视频、音频、LifeBlog 数据（所有活动，包含地理信息）、Java 程序、手机内存和闪存卡中的文件系统数据、GPRS 和 Wi-Fi 使用记录、录音文件等信息的获取与恢复。该工具也可以针对非智能手机、智能手机、平板的逻辑分析。\ncheckm8， iOS 设备漏洞半越狱进行取证，但支持版本比较旧\n","permalink":"http://localhost:1313/posts/%E6%89%8B%E6%9C%BA%E5%8F%96%E8%AF%81/","summary":"\u003cp\u003eitunes backup\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://image-1253434595.cos.ap-chengdu.myqcloud.com/img/202409202201620.png\" alt=\"img\"  /\u003e\r\n\u003c/p\u003e\n\u003cp\u003e手机输入密码新人设备，信任文件保存在电脑中\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://image-1253434595.cos.ap-chengdu.myqcloud.com/img/202409202201169.png\" alt=\"img\"  /\u003e\r\n\u003c/p\u003e\n\u003cp\u003e注意：信任文件会因版本升级、系统重启等因素失效\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://image-1253434595.cos.ap-chengdu.myqcloud.com/img/202409202201084.png\" alt=\"img\"  /\u003e\r\n\u003c/p\u003e\n\u003cp\u003e建议使用加密备份，获取的信息更加全面\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://image-1253434595.cos.ap-chengdu.myqcloud.com/img/202409202201006.png\" alt=\"img\"  /\u003e\r\n\u003c/p\u003e\n\u003cp\u003e备份完成后的存储路径\u003ccode\u003e%USERPROFILE%\\Apple\\MobileSync\\Backup\u003c/code\u003e下的设备UDID文件夹中。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://image-1253434595.cos.ap-chengdu.myqcloud.com/img/202409202201175.png\" alt=\"img\"  /\u003e\r\n\u003c/p\u003e\n\u003cp\u003emvt（Mobile Verification Toolkit）\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://image-1253434595.cos.ap-chengdu.myqcloud.com/img/202409202201116.png\" alt=\"img\"  /\u003e\r\n\u003c/p\u003e\n\u003cp\u003eOxygen Forensic Suite，支持对手机基本信息、SIM卡信息、联系人列表、组信息、快速拨号、通话记录、短消息、短信中心时间戳、日历、待办事项、文本便签、照片、视频、音频、LifeBlog 数据（所有活动，包含地理信息）、Java 程序、手机内存和闪存卡中的文件系统数据、GPRS 和 Wi-Fi 使用记录、录音文件等信息的获取与恢复。该工具也可以针对非智能手机、智能手机、平板的逻辑分析。\u003c/p\u003e","title":"手机取证"},{"content":"ShellBags是一组用来记录文件夹（包括挂载网络驱动器文件夹和挂载设备的文件夹）的名称、大小、图标、视图、位置的注册表项，或称为BagMRU。每次对文件夹的操作，ShellBags的信息都会更新，而且包含时间戳信息。是Windows系统改善用户体验的功能之一。即使删除文件夹后，ShellBags仍然会保留文件夹的信息。因此可以用来揭示用户的活动。\nShellBags解析工具\nShellBagsExplorer加载USRCLASS.DAT\nWindows 取证之ShellBags https://zhuanlan.zhihu.com/p/585383290\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\ShellNoRoam HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\Shell HKEY_CURRENT_USER\\Software\\Classes\\Local Settings\\Software\\Microsoft\\Windows\\Shell（仅在 Windows Vista 中） 记录最近通过资源管理器访问的文件夹的信息：\nUSRCLASS.DAT：HKCU\\Software\\Classes\\Local Settings\\Software\\Microsoft\\Windows\\Shell\\BagMRU\nUSRCLASS.DAT：HKCU\\Software\\Classes\\Local Settings\\Software\\Microsoft\\Windows\\Shell\\Bags\n以时间线排列\n","permalink":"http://localhost:1313/posts/usrclass.dat/","summary":"\u003cp\u003eShellBags是一组用来记录文件夹（包括挂载网络驱动器文件夹和挂载设备的文件夹）的名称、大小、图标、视图、位置的注册表项，或称为BagMRU。每次对文件夹的操作，ShellBags的信息都会更新，而且包含时间戳信息。是Windows系统改善用户体验的功能之一。即使删除文件夹后，ShellBags仍然会保留文件夹的信息。因此可以用来揭示用户的活动。\u003c/p\u003e","title":"USRCLASS.DAT取证"},{"content":" Kylin系统，为目前中国领先的自主可控操作系统之一，于2001年由国防科技大学研发，旨在打破外国操作系统在中国市场的垄断地位，并增强国家信息安全。\n麒麟系统最开始基于FreeBSD改写，Kylin 3.0版之后改用Linux来改写。\n安装时可能使用全盘加密，影响取证\n麒麟系统默认root用户是不开启的，使用sudo -i 可以切换到root\n尝试dd命令是可以使用的\n运行x64内存转储工具avml，能够正常转储内存\n运行检测工具\n运行检测脚本\n","permalink":"http://localhost:1313/posts/kylin%E5%9B%BD%E4%BA%A7%E9%BA%92%E9%BA%9F%E7%B3%BB%E7%BB%9F/","summary":"\u003cblockquote\u003e\n\u003cp\u003eKylin系统，为目前中国领先的自主可控操作系统之一，于2001年由国防科技大学研发，旨在打破外国操作系统在中国市场的垄断地位，并增强国家信息安全。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e麒麟系统最开始基于FreeBSD改写，Kylin 3.0版之后改用Linux来改写。\u003c/p\u003e\n\u003cp\u003e安装时可能使用全盘加密，影响取证\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://image-1253434595.cos.ap-chengdu.myqcloud.com/img/202409241357438.png\" alt=\"img\"  /\u003e\r\n\u003c/p\u003e\n\u003cp\u003e麒麟系统默认root用户是不开启的，使用sudo -i 可以切换到root\u003c/p\u003e","title":"Kylin国产麒麟系统取证"},{"content":"用户 对于帐户，攻击者一般的利用方式有：\n• 使用存在/默认的帐户\n• 创建新的帐户\n• 删除/修改帐户\n• 账号克隆\n查看系统存在的用户：\nnet user\t# 查看系统用户,但是无法查看 wmic useraccount list full Get-LocalUser |Select * # powershell # 注册表查看 检查用户目录(可能不准确，第一次登录时才会创建) ，用户的目录显示的时间可能是用户实际创建的时间，也有情况实际时间可能比目录时间早。\n对于用户帐户，多数情况下和业务需求用关，我们可能需要和管理员确认帐户的合法性。\nAccountType，本地帐户和域帐户，类型都是512。\nSID和RID：每一个Windows帐户都有一个唯一的SID (Security Identifier)，格式如 S-R-I-S , SID 以字符\u0026quot;S\u0026quot;开头，接着为版本标识 (通常设置为\u0026quot;1\u0026quot;)，接着为Identifier-authority值（通常为 \u0026ldquo;5\u0026rdquo;），然后为一个或多个subauthority值。subauthority值最后为RID (Relative Identifier)， 表示主机上的特定对象。 与Linux类似，Windows用户的RID通常以500（174h）开始，administrator的RID就是500，系统新建用户从1001开始，如上图。RID在用户创建时被分配并+1，所以通过RID可以判断是否有用户被删除。\nRID 为5xx的帐户的状态为Degraded[Disabled]，这些帐户因为安全原因，默认是禁用的。在取证过程中，如果我们发现上面某个帐户被启用，尤其是内置的administrator或者guest，我们可以认为存在可疑，并进一步调查，我们一般使用事件ID 4722查看用户何时被启用以及为何启用。\nwevtutil qe security /f:text \u0026#34;/q:*[System[(EventID=4722)]]\u0026#34; 在20240809日用户admin启用guest账户\n网络连接 对于网络连接，我们可以判断是否有进程外联恶意IP地址，或者不应该产生的网络连接，使用命令netstat -anob 3（每3秒查看一次所有连接情况）查看网络连接和对应进程。\n也可以使用netstat -ano 3 | findstr 8.8.8.8检测8.8.8.8相关的网络连接情况。\n对于cobaltstrike这种异步通信的C2，使用cports的log changes功能很容易记录到，建议在Advance Options中将自动刷新设置未2秒左右。\n同样我们可以是使用强大的微软SysinternalsSuite套件的监控工具Procmon，过滤Operation（操作）选择相关网络行为如tcp send、udp send。\n或者也可以快速选择只查看网络行为。\n如果网络中发现异常，我们可以记住pid，从进程分析。\n进程 👌进程进行分析，我们主要关注进程可执行程序对名称，可执行程序对位置，进程创建时间等信息。\n常见的恶意程序名称：\nscvhost.exe\niexplore.exe\nexplorer.exe\n随机字符串\nlsass.exe\nwin.exe\nwinlogon.exe\n**update.exe\n常见的恶意程序位置：\nWindows\\System32\\\n%Temp%\n\\Windows\nWinSxS目录\n\\System Volume Information\n$Recycle Bin\n\\Program files\nTemorary Internet files\n\u0026hellip;..\n我们使用 tasklist和wmic对进程进行一个初步的分析：\ntasklist\t# 列出所有当前运行的进程\ntasklist\t# 列出所有当前运行的进程及加载的模块\ntasklist /m [dll] # 列出加载了指定模块的进程\nwmic process list full\t# 查看完整进程列表\nwmic PROCESS WHERE Name=\u0026ldquo;epr_update.exe\u0026rdquo; LIST FULL # 指定进程\n咱们再扩展下wmic命令，全称Windows Management Instrumentation Command-line，是用于管理和监视Windows操作系统的命令行工具。它提供了丰富的功能，可以用来查询系统信息、执行管理任务和监控系统状态，示例：\n基本参数\tc:\\\u0026gt; wmic [alias] [where clause] [verb clause] 常用的[aliases]: process service share nicconfig startup useraccount [where 语句] 例子: where name=\u0026#34;nc.exe\u0026#34; where (commandline like \u0026#34;%stuff\u0026#34;) where (name=\u0026#34;cmd.exe\u0026#34; and parentprocessid!=\u0026#34;[pid]\u0026#34;) [verb 语句] 例子: list [full|brief] get [attrib1,attrib2] call [method] delete 1、查看系统版本 wmic os get Caption, Version, OSArchitecture 2、查看账户信息 wmic useraccount get Name, FullName, Disabled 3、查看启动的服务 wmic service where \u0026#34;State=\u0026#39;Running\u0026#39;\u0026#34; get Caption, StartName 除了命令行工具，也可以使用图形界面工具procexp。我们可以在Options中选择Verify Image Signatures，在分析过程，我们可以优先查看没有签名，或者可执行程序路径异常的进程:\n也可以使用procexp对比镜像文件与内存中的字符串来获取一些有用的信息\n另外就是在取证过程，我们可能发现合法的进程发起了可疑的网络连接，此时需要检测是否存在代码注入或shellcode注入。我们可以使用pe-sieve或者hollows_hunter进行检测：\npe-sieve：https://github.com/hasherezade/pe-sieve\nhollows_hunter：https://github.com/hasherezade/hollows_hunter\n历史命令 cmd历史命令只记录当前shell窗口，关闭窗口后就清理了，使用**doskey /history**查看\npowershell 保存完整的历史命令，位置如下\n%userprofile%\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt\n文件及文件时间 对于文件系统的分析，我们可以先查看在入侵发生的时间点附近新增的文件。这里可以使用 Everything 的便携式版本。\neverything只支持ntfs磁盘文件格式，fat需要在选项中重新扫描：\neverything是创建文件索引库来完成快速检索，我们可以将文件索引库导出，Everything 的便携式版本生成数据库中程序目录下，安装版生成数据库位置在%LOCALAPPDATA%\\everything\\everything.db，如下：\n我们可以使用脚本读取取证回来的数据库文件\n::读取everything数据库 @echo off cd /d %~dp0 start /min .\\Everything.exe -read-only -db .\\Everything.db 也可以在gui中导出\n根据文件创建时间查找：dc:20240801、根据文件修改时间查找：dm:20240801\n示例\n搜索指定目录指定日期新增ext、exe、com后缀的文件 c:\\users\\admin\\Desktop\\ datecreated:2024-05-10T08:00-2024-05-10T18:00 file:ext:exe;com\n除了搜索exe，dll外，也可以用来搜索webshell，如php，asp，aspx，jsp，jspx。\n隐藏文件 使用cmd快速查看重要目录的隐藏文件\ncmd.exe /C dir /S /B /AHD C:\\Windows*\ncmd.exe /C dir /S /B /A:H C:\\Windows\\System32*\ndir c:\\Windows\\System32* /a:h\ndir c:\\Windows\\System32* /s /b /a:h\n示例：\n其他 签名检测 使用Sysinternals套件中的sigcheck对程序签名检测\n用法：sigcheck [-a][-h][-i][-e][-l][-n][[-s]|[-c|-ct]|[-m]][-q][-p ][-r][-u][-vt][-v[r][s]][-f catalog file] [-w file] 用法：sigcheck -d [-c|-ct] [-w file] 用法：sigcheck -o [-vt][-v[r]] [-w file] 用法：sigcheck -t[u][v] [-i] [-c|-ct] [-w file] \u0026lt;certificate store name|*\u0026gt;\n-a 显示扩展版本信息。报告的熵度量是文件内容的每字节信息位数。\n-c 带逗号分隔符的 CSV 输出\n-ct 带制表符分隔符的 CSV 输出\n-nobanner 以避免将横幅输出到 CSV\n-d 转储目录文件的内容\n-e 仅扫描可执行映像（无论其扩展名是什么）\n-f 在指定的目录文件中查找签名\n-h 显示文件哈希\n-i 显示目录名称和签名链\n-l 遍历符号链接和目录连接\n-m 转储清单\n-n 仅显示文件版本号\n-o 使用 -h 选项时，对先前由 Sigcheck 捕获的 CSV 文件中捕获的哈希执行 Virus Total 查找。此用法适用于扫描离线系统。\n-u 只显示未签名程序\n-p 根据指定策略（由其 GUID 表示）或存储在指定策略文件中的自定义代码完整性策略验证签名。\n-r 禁用证书吊销检查\n-s 递归子目录\n-vt:在 VirusTotal 上检查文件的哈希值，需要联网并且已配置 API 密钥。\n-w 将输出写入指定文件。\nsigcheck -i c:\\busybox.exe\t# 单个检测\n因为多数恶意程序是没有签名的，所以我们可以先对用户目录和C:\\Windows目录可执行程序的签名进 行检测，优先分析未签名的程序： sigcheck -u -s -c -e -h -w d:\\sig.csv c:\\Users\\admin\\ 结果保存在d:\\sig.csv\n检查签名不足之处是整个扫描过程花费时间较长，建议作为最后一个手段。对于结果，我们可以基于 文件位置，签名，文件时间，hash等综合判断是否异常，可以将md5在威胁情报中判定，下面为几个常用的威胁情报：\n微步在线威胁情报社区：https://x.threatbook.cn\nvirustotal：https://www.virustotal.com/gui/home/search\n奇安信威胁情报中心：https://ti.qianxin.com\nWindows 使用文件列表 OpenSaveMRU:这个注册表路径存储了用户最近使用的文件打开操作的记录\nOpenSavePidlMRU:也是用来存储最近使用的文件路径记录，但是它记录的是通过文件系统对象标识符（PIDL，Persistent Item Identifier List）访问的文件路径\nreg query HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComDlg32\\OpenSaveMRU reg query HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComDlg32\\OpenSavePidlMRU ","permalink":"http://localhost:1313/posts/windows%E4%B8%8B%E6%A3%80%E6%B5%8B%E6%96%B9%E6%B3%95/","summary":"\u003ch1 id=\"用户\"\u003e用户\u003c/h1\u003e\n\u003cp\u003e对于帐户，攻击者一般的利用方式有：\u003c/p\u003e\n\u003cp\u003e• 使用存在/默认的帐户\u003c/p\u003e\n\u003cp\u003e• 创建新的帐户\u003c/p\u003e\n\u003cp\u003e• 删除/修改帐户\u003c/p\u003e\n\u003cp\u003e• 账号克隆\u003c/p\u003e\n\u003cp\u003e查看系统存在的用户：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-powershell\" data-lang=\"powershell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enet user\t\u003cspan style=\"color:#75715e\"\u003e# 查看系统用户,但是无法查看\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ewmic useraccount list full\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGet-LocalUser |Select * \t\t\u003cspan style=\"color:#75715e\"\u003e# powershell\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 注册表查看\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e检查用户目录(可能不准确，第一次登录时才会创建) ，用户的目录显示的时间可能是用户实际创建的时间，也有情况实际时间可能比目录时间早。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://image-1253434595.cos.ap-chengdu.myqcloud.com/img/202409241401541.png\" alt=\"img\"  /\u003e\r\n\u003c/p\u003e\n\u003cp\u003e对于用户帐户，多数情况下和业务需求用关，我们可能需要和管理员确认帐户的合法性。\u003c/p\u003e","title":"windows下检测方法"},{"content":" BitLocker驱动器加密是在WindowsVista内首次提供的操作系统的一项数据保护功能。\n后来的操作系统版本不断改进BitLocker保护锁提供的安全性，从而允许操作系统为更多驱动器和设备提供BitLocker保护。将BitLocker与操作系统集成后，可以消除由于计算机丢失、被盗或解除授权不当而导致的数据被盗或公开的威胁。\t\u0026ndash;百度百科\nBitLocker驱动器加密通过加密Windows操作系统卷上存储的所有数据可以更好地保护计算机中的数据，Bitlocker的解锁方式主要有三种：TPM、PIN、恢复密钥：\n主动加密（PIN）：用户主动利用BitLocker加密磁盘。\n被动加密（TPM）：非用户自行加密，出厂自带基于TPM的BitLocker加密，一般见于品牌笔记本（一般情况下是“等待激活状态”而此时底层代码已有BitLocker分区标记，且底层加密，但是在BitLocker信息区存在公开密钥，因此Win10操作系统可以直接识别这种状态并直接显示分区内容）。\n恢复密码：恢复密钥是一个最短48位的数字，可以被制作成密钥文件存储于U盘作为解密工具。\n0x1、搜索恢复密钥文件 搜索保存到U盘或文件\n有些计算机的恢复文件保存在计算机内部，保存密钥的文档默认字符编码为Unicode字符编码。文件名默认开头为“BitLocker 恢复密码”，hex为:FFFE62600D59C65BA594。内容中密钥正则为[0-9]{6}?-[0-9]{6}-[0-9]{6}-[0-9]{6}-[0-9]{6}-[0-9]{6}-[0-9]{6}-[0-9]{6}\nTODO：使用go实现小工具**[**BitLocker密钥搜索工具]\n1、查找Unicode文件的BOM,hex:FFEF\nFF FE 42 00 69 00 74 00 4C 00 6F 00 63 00 6B 00 65 00 72\n2、优先查找hex为:0062600D59C65BA594（恢复密钥）\n0x2、计算机系统内存 前提条件是内存中残留有密钥，并且我们在需要取内存文件（或者睡眠文件hiberfil.sys、Active Directory数据库文件）与磁盘镜像；对于没有获取到内存镜像的加密磁盘，Elcomsoft Forensic Disk Decryptor可基于加密磁盘生成后缀为.esprbltg的文件，基于该文件，可在Distributed Password Recovery中对密钥进行暴力破解。\n来自俄罗斯的EFDD（Elcomsoft Forensic Disk Decryptor）工具可以破解加密的磁盘。参考链接【内存取证】破解BitLocker加密\n使用Passware Kit软件，Passware Kit是综合型解密工具，可以破解压缩包、文档、系统等密码。\n选择【全盘加密】\n【bitlocker】解密\n依次填入虚拟磁盘文件、待解密的分区、内存镜像文件，存放解密磁盘文件路径。解密时间受镜像大小和电脑性能影响。\n0x3、系统工具 解开后的加密卷可以通过Windows自带的命令manage-bde -protectors -get [盘符]查看其恢复密钥串，如下图。\n0x4、暴力破解 BitLocker使用AES（高级加密标准/Advanced Encryption Standard）128位或256位的加密算法进行加密，从理论上来说可破解，但随着密码长度以及密码复杂度的变化，恢复时间呈指数级增加。一般sha128破解可需要2000年时间。\n0x5、解锁 cmd命令提示符中输入恢复密码\nmanage-bde -unlock F: -RecoveryPassword 336622-228228-149567-378840-426613-398695-243287-601502\n也可以使用其他软件完成：\n找到恢复密码的可以使用DiskGenius软件来进行BitLocker的解密，选择磁盘-\u0026gt;打开虚拟磁盘文件，选择Secret文件：\n","permalink":"http://localhost:1313/posts/bitlocker%E8%A7%A3%E5%AF%86%E7%A0%94%E7%A9%B6/","summary":"\u003cblockquote\u003e\n\u003cp\u003eBitLocker驱动器加密是在WindowsVista内首次提供的操作系统的一项数据保护功能。\u003c/p\u003e\n\u003cp\u003e后来的操作系统版本不断改进BitLocker保护锁提供的安全性，从而允许操作系统为更多驱动器和设备提供BitLocker保护。将BitLocker与操作系统集成后，可以消除由于计算机丢失、被盗或解除授权不当而导致的数据被盗或公开的威胁。\t\t\t\t\t\t\t\t\t\t\t\u0026ndash;百度百科\u003c/p\u003e","title":"Bitlocker解密研究"},{"content":"大多数docker为剪裁的nuix系统，很多的命令工具都没有，需要上传静编译好的busybox上传docker cp busybox-i486 8553e459dc85:\\tmp与scp命令相似。\n1、方法一\nroot也无权限，因为docker为了保证主机安全，docker开了很多安全设置，禁止ptrace，Docker 将gdb调试需要SYS_PTRACE属性被禁止掉了，所以gdb在调试的时候会显示ptrace被禁止。所以想在docker内部调试gdb解决办法就是create和run的时候带上以下参数。\n#采用超级权限模式\ndocker run \u0026ndash;privileged \u0026hellip;\u0026hellip;\n#关闭seccomp\ndocker run \u0026ndash;security-opt seccomp=unconfined\n#仅开放ptrace限制 docker run \u0026ndash;cap-add=sys_ptrace\ndocker安全机制中中包括ASLR（Address space layout randomization），即docker里的内存地址和主机内存地址是不一样的。ASLR会导致GDB这种依赖地址的程序无法正常运作。\n使用gdb转储时应该要注意gdb调试中gdb默认需要关闭linux的地址随机化功能，可以通过gdb 命令set disable-randomization off关闭。\nset disable-randomization on\t# 开启\nset disable-randomization off\t# 关闭\nshow disable-randomization\t# 显示\n最后，通过超级权限模式进入，正常转储进程coredump文件，\n2、方法二\n方法一中docker 运行时不能更改SYS_PTRACE且可能造成容器逃逸。所以可以才用以下方法，进入dockers，并且该 bash 并没有 SYS_PTRACE 权限的限制，可以非常方便的使用 gdb 了。\n成功转储core\n3、疑问：转储宿主机pid是否正确？\n从宿主机上找到对应的进程，然后在宿主机上执行gdb attach。\n宿主机进程与容器进程有以下特点 1、docker容器内的一个进程对应于宿主机器上的一个进程。 2、容器内的进程，与相对应的宿主进程，由相同的uid、gid拥有。\n参考资料：\nhttps://visualgdb.com/gdbreference/commands/set_disable-randomization?spm=a2c6h.12873639.article-detail.6.558714108Mgy0C\nhttps://docs.docker.com.zh.xy2401.com/engine/security/seccomp/\nhttps://www.zsythink.net/archives/4321\n","permalink":"http://localhost:1313/posts/docker%E5%86%85%E5%AD%98%E8%BD%AC%E5%82%A8/","summary":"\u003cp\u003e大多数docker为剪裁的nuix系统，很多的命令工具都没有，需要上传静编译好的busybox上传docker cp busybox-i486 8553e459dc85:\\tmp与scp命令相似。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"1689300476991-3abd3884-202e-4d2f-ad2d-a4e9a15abcb9-1726652442112-95.webp\" alt=\"image.png\"  /\u003e\r\n\u003c/p\u003e\n\u003cp\u003e1、方法一\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"1689302239074-259deb79-d19d-410c-896a-05a42625fcfd.webp\" alt=\"image.png\"  /\u003e\r\n\u003c/p\u003e\n\u003cp\u003eroot也无权限，因为docker为了保证主机安全，docker开了很多安全设置，禁止ptrace，Docker 将gdb调试需要SYS_PTRACE属性被禁止掉了，所以gdb在调试的时候会显示ptrace被禁止。所以想在docker内部调试gdb解决办法就是create和run的时候带上以下参数。\u003c/p\u003e","title":"docker内存转储"},{"content":"\r交叉编译tcpdump，在树莓派上抓包，用户层交叉编译比较简单。交叉编译器有很多，我们本次采用linaro(http://releases.linaro.org)交叉编译工具。\n系统版本：centos7\n编译工具：arm-linux-gnueabi\nwget http://releases.linaro.org/components/toolchain/binaries/4.9-2017.01/arm-linux-gnueabi/gcc-linaro-4.9.4-2017.01-x86_64_arm-linux-gnueabi.tar.xz\nwget http://www.tcpdump.org/release/libpcap-1.8.1.tar.gz\nwget http://www.tcpdump.org/release/tcpdump-4.9.1.tar.gz\n1、下载好之后进行解压到任意目录\ntar -xvf gcc-linaro-4.9.4-2017.01-x86_64_arm-linux-gnueabi.tar.xz tar -zxvf libpcap-1.10.3.tar.gz tar -zxvf tcpdump-4.99.3.tar.gz 2、进入到编译工具的bin目录后，执行./arm-linux-gnueabi-gcc -v 查看版本信息。\n3、配置编译器环境变量\nvim /etc/profile\nexport ARCH=arm export CROSS_COMPILE=arm-linux-gnueabihf- export PATH=$PATH:/root/tcpdump/gcc-linaro-4.9.4-2017.01-x86_64_arm-linux-gnueabi/bin source ~/.bashrc\n4、编译libpcap和tcpdump\ntar -zxvf libpcap-1.10.1.tar.gz cd libpcap-1.10.1/ ../configure CC=arm-linux-gnueabihf-gcc --host=arm-linux --prefix=/root/tcpdump/install make make install tar -zxvf tcpdump-4.99.1.tar.gz cd tcpdump-4.99.1/ ./configure CC=arm-linux-gnueabihf-gcc --host=arm-linux --prefix=/root/tcpdump/install make make install ps：这里需要说明的是CC参数指定了交叉编译器, 编译两者时需要指定相同的目录, 否则在编译tcpdump时需要指定libpcap的路径。\n5、在安装目录下找到arm架构的tcpdump，结果如下\n","permalink":"http://localhost:1313/posts/%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91tcpdump/","summary":"\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://image-1253434595.cos.ap-chengdu.myqcloud.com/img/202409191513414.webp\" alt=\"\"  /\u003e\r\n\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e交叉编译tcpdump，在树莓派上抓包，用户层交叉编译比较简单。交叉编译器有很多，我们本次采用linaro(\u003ca href=\"http://releases.linaro.org/\"\u003ehttp://releases.linaro.org\u003c/a\u003e)交叉编译工具。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e系统版本：centos7\u003c/p\u003e\n\u003cp\u003e编译工具：arm-linux-gnueabi\u003c/p\u003e\n\u003cp\u003ewget \u003ca href=\"http://releases.linaro.org/components/toolchain/binaries/4.9-2017.01/arm-linux-gnueabi/gcc-linaro-4.9.4-2017.01-x86_64_arm-linux-gnueabi.tar.xz\"\u003ehttp://releases.linaro.org/components/toolchain/binaries/4.9-2017.01/arm-linux-gnueabi/gcc-linaro-4.9.4-2017.01-x86_64_arm-linux-gnueabi.tar.xz\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003ewget\u003cfont style=\"color:rgb(77, 77, 77);\"\u003e \u003c/font\u003e\u003ca href=\"http://www.tcpdump.org/release/libpcap-1.8.1.tar.gz\"\u003ehttp://www.tcpdump.org/release/libpcap-1.8.1.tar.gz\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003cfont style=\"color:rgb(77, 77, 77);\"\u003ewget \u003c/font\u003e\u003ca href=\"http://www.tcpdump.org/release/tcpdump-4.9.1.tar.gz\"\u003ehttp://www.tcpdump.org/release/tcpdump-4.9.1.tar.gz\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e1、下载好之后进行解压到任意目录\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etar -xvf gcc-linaro-4.9.4-2017.01-x86_64_arm-linux-gnueabi.tar.xz\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etar -zxvf libpcap-1.10.3.tar.gz\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etar -zxvf tcpdump-4.99.3.tar.gz\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e2、进入到编译工具的bin目录后，执行\u003ccode\u003e./arm-linux-gnueabi-gcc -v \u003c/code\u003e查看版本信息。\u003c/p\u003e","title":"交叉编译tcpdump"},{"content":"绿盟下一代防火墙取证，需要进入到系统后台，可以使用ssh登录\n用户名：develop\n密码：绿盟厂家支持\nls -alhR /proc/*/exe 2\u0026gt; \\dev\\null |grep deleted\n根据木马1、会自删除得到特点，2、随机8个字母数字。可以通过一个简单的ls和grep命令进行检测。此命令将遍历/proc目录中所有正在运行的进程，并检查它们是否具有格式为memfd:（deleted）的可执行路径。这个条目非常可疑，并且在无文件攻击中很常见。\nnetstat -nalp\nps -auxw\ncp /proc//exe /tmp/exe.bin\n/mnt/cf/orig/nsfocus/bin/随机8个字母数字\n找到确认pid后，使用以下脚本转储pid内存，脚本依赖gdb（若无gdb可静态编译）。\n#! /bin/env bash PID=$1 # Temporary file to append memory to TMP=\u0026#34;`pwd`/$(date +\u0026#34;%Y-%m-%d\u0026#34;)_${PID}.dump\u0026#34; # Reads memory addresses from /proc/\u0026lt;PID\u0026gt;/maps memory_addresses=$(cat /proc/${PID}/maps | sed -n \u0026#39;s/^\\([0-9a-f]*\\)-\\([0-9a-f]*\\) .*$/\\1\\t\\2/p\u0026#39;) # Inform user about acquisition echo -e \u0026#34;$(date +\u0026#34;%Y-%m-%d %H:%M:%S\u0026#34;)\\tStarting acquision of process ${PID}\u0026#34; \u0026gt;\u0026amp;2 echo -e \u0026#34;$(date +\u0026#34;%Y-%m-%d %H:%M:%S\u0026#34;)\\tProc cmdline: \\\u0026#34;$(cat /proc/$PID/cmdline)\\\u0026#34;\u0026#34; \u0026gt;\u0026amp;2 # Loops over the retrieved memory areas and dumps their content to a temporary file echo \u0026#34;${memory_addresses}\u0026#34; | while read start stop; do echo -e \u0026#34;$(date +\u0026#34;%Y-%m-%d %H:%M:%S\u0026#34;)\\tDumping $start - $stop\u0026#34; \u0026gt;\u0026amp;2 gdb --batch --pid ${PID} -ex \u0026#34;append memory ${TMP} 0x$start 0x$stop\u0026#34; \u0026gt;/dev/null 2\u0026gt;\u0026amp;1 done # Calculates the hash of the retrieved contents echo -e \u0026#34;$(date +\u0026#34;%Y-%m-%d %H:%M:%S\u0026#34;)\\tResulting SHA512: $(sha512sum ${TMP} | cut -d\u0026#39; \u0026#39; -f1 -)\u0026#34; \u0026gt;\u0026amp;2 ps\n默认ssh 50022端口（需要web管理开启远程支撑）\n用户\ndevelop（管理员）\nengineer\n版本\nLinux version 3.16.35-nsfocus.x86_64 (chenshi2@localhost.localdomain) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-36) (GCC) ) #10 SMP PREEMPT Thu Mar 4 16:43:17 CST 2021\n内置dns解析（host文件）\n122.14.62.70 update.nsfocus.com\n125.97.242.141 update.api.nsfocus.com\n221.122.179.52 auth.api.nsfocus.com\n125.97.242.187 portal.nsfocus.com\n221.122.179.32 reputation.api.nsfocus.com\n221.122.179.5 espp.api.nsfocus.com\n","permalink":"http://localhost:1313/posts/%E7%BB%BF%E7%9B%9F%E4%B8%8B%E4%B8%80%E4%BB%A3%E9%98%B2%E7%81%AB%E5%A2%99/","summary":"\u003cp\u003e绿盟下一代防火墙取证，需要进入到系统后台，可以使用ssh登录\u003c/p\u003e\n\u003cp\u003e用户名：develop\u003c/p\u003e\n\u003cp\u003e密码：绿盟厂家支持\u003c/p\u003e\n\u003cp\u003els -alhR /proc/*/exe 2\u0026gt; \\dev\\null |grep deleted\u003c/p\u003e\n\u003cp\u003e根据木马1、会自删除得到特点，2、随机8个字母数字。可以通过一个简单的ls和grep命令进行检测。此命令将遍历/proc目录中所有正在运行的进程，并检查它们是否具有格式为memfd:（deleted）的可执行路径。这个条目非常可疑，并且在无文件攻击中很常见。\u003c/p\u003e","title":"绿盟下一代防火墙取证"},{"content":"MFT，全称Master File Table，即主文件表。Master File Table (MFT)是一个结构化的数据库，对所有保存到NTFS卷到对象进行追踪。每一个对 象在MFT中有一个FILE记录。\n每一个FILE记录包含一系列属性，这些属性包含和文件相关的各种数 据及元数据，比如大小、时间、权限等。 MFT项也称为文件记录(File Record)每一个记录为1024字节长。如果文件很小，文件内容将保存在MFT记录元数据的后面，如果文件比较 大，则通过指针指向文件的实际内容。\nFile Record在$MFT文件中物理上是连续的，且从0开始编号，前12个记录由系统文件使用确保NTFS正常工作。这些文件名称都以 $开头，且为隐藏状态，需要使用特殊工具才能查看。\nMFT文件记录 文件名 说明 0 $MFT 主文件表（Master File Table），记录文件和目录的元数据。 1 $MFTMIRR 主文件表的镜像，提供主文件表的备份和恢复功能。 2 $LOGFILE NTFS日志文件，用于记录文件系统操作的日志信息。 3 $VOLUME 卷文件，包含有关卷的信息。 4 $ATTRDEF 属性定义文件，定义了文件和目录的属性结构。 5 . 当前目录的符号链接。 6 $BITMAP 文件分配表（Bitmap），用于跟踪磁盘上的空闲和已用空间。 7 $BOOT 启动文件，包含启动操作系统所需的信息。 8 $BADCLUS 坏簇文件，记录已标记为坏簇的磁盘簇信息。 9 $SECURE 安全文件，用于存储安全描述符和权限信息。 10 $UPCASE 大小写转换表，用于在文件名匹配时进行大小写敏感的比较。 11 $EXTEND 扩展文件，包含有关文件系统扩展属性的信息。 位置一般在磁盘根目录，如下图\n上面讲到的特使更具很多，比如这里使用MFTECmd（https://github.com/EricZimmerman/MFTECmd）\n读取MFT结果如下，可以看到文件的名称，大小，日期，权限等各种信息\n1、在实际工作中，可能会遇到攻击者篡改文件时间戳的场景 ，通过MFT输出2中创建时间：\nCreated (0x10)是标准信息 (SI) 创建时间戳。这可以由用户级进程修改，例如 timestomping。 Created (0x30)是 FileName (FN) 创建时间戳。这只能由内核或利用内核的工具进行修改，内核是操作系统的一个特权和受限部分，其中包含用于直接与硬件外围设备交互、实施安全控制以及代表用户调度和控制进程的软件。 可以筛选SI\u0026lt;FN（标准信息\u0026lt;文件名属性），一般攻击者都喜欢将恶意文件时间改为过去，以便将mm隐藏在事件发生时间范围之前的正常文件中。\n2、 一些工具可能无法精确到亚秒精度级别（亚秒都为0.0000001），也就是时间小数部分很多0，可以筛选u Sec Zeroes显示毫秒为零的文件。\n结合上述2点\n","permalink":"http://localhost:1313/posts/windows-%E5%8F%96%E8%AF%81%E4%B9%8Bmft/","summary":"\u003cp\u003e\u003ccode\u003eMFT\u003c/code\u003e，全称\u003ccode\u003eMaster File Table\u003c/code\u003e，即主文件表。Master File Table (MFT)是一个结构化的数据库，对所有保存到NTFS卷到对象进行追踪。每一个对 象在MFT中有一个FILE记录。\u003c/p\u003e\n\u003cp\u003e每一个FILE记录包含一系列属性，这些属性包含和文件相关的各种数 据及元数据，比如大小、时间、权限等。 MFT项也称为文件记录(\u003ccode\u003eFile Record\u003c/code\u003e)每一个记录为1024字节长。如果文件很小，文件内容将保存在MFT记录元数据的后面，如果文件比较 大，则通过指针指向文件的实际内容。\u003c/p\u003e","title":"Windows 取证之$MFT"},{"content":"记录一次jffs2镜像挂载过程 在某IOT设备上取得磁盘镜像文件，jffs2常用在嵌入式Linux系统。现在需要挂载到本地Linux系统，取出文件进行分析。\n环境：ubuntu20.4 for ARM # 不建议使用centos\n工具：apt install mtd-utils # 也可以源码编译\n1、查看iot设备文件镜像类型： file txt.dd\n为大端的jffs文件系统：\n​\tJFFS2的全名为JournallingFlashFileSystemVersion2（闪存日志型文件系统第2版），其功能就是管理在MTD设备上实现的日志型文件系统。与其他的存储设备存储方案相比，JFFS2并不准备提供让传统文件系统也可以使用此类设备的转换层。它只会直接在MTD设备上实现日志结构的文件系统。JFFS2会在安装的时候，扫描MTD设备的日志内容，并在RAM中重新建立文件系统结构本身。\n​\t除了提供具有断电可靠性的日志结构文件系统，JFFS2还会在它管理的MTD设备上实现“损耗平衡”和“数据压缩”等特性。\t\u0026ndash;引用《百度百科jffs2》\n因为本地系统只支持小端的文件系统，我们可以使用jffs2dump转换工具进行转换。命令如下：\njffs2dump -c -v -b -e\n2、格式50M的空间，加载mtd插件；并且使用dd命令将镜像填充至/dev/mtdblock1 modprobe mtdram total_size=50720 # 单位默认KB\nmodprobe mtdblock\n3、使用dd填充结果 4、mount挂载结果 mkdir /mnt/mtd\nmount -t jffs2 /dev/mtdblock0 /mnt/mtd\n5、打开挂载目录/mnt/mtd，成功获取到磁盘中文件： 6、最后 rmmod mtdblock\n","permalink":"http://localhost:1313/posts/jffs2%E7%A3%81%E7%9B%98%E9%95%9C%E5%83%8F%E6%8C%82%E8%BD%BD%E8%BF%87%E7%A8%8B/","summary":"\u003ch1 id=\"记录一次jffs2镜像挂载过程\"\u003e记录一次jffs2镜像挂载过程\u003c/h1\u003e\n\u003cp\u003e在某IOT设备上取得磁盘镜像文件，jffs2常用在嵌入式Linux系统。现在需要挂载到本地Linux系统，取出文件进行分析。\u003c/p\u003e\n\u003cp\u003e环境：ubuntu20.4   for ARM       # 不建议使用centos\u003c/p\u003e\n\u003cp\u003e工具：apt install mtd-utils        # 也可以源码编译\u003c/p\u003e\n\u003ch5 id=\"1查看iot设备文件镜像类型\"\u003e1、查看iot设备文件镜像类型：\u003c/h5\u003e\n\u003cp\u003e\u003ccode\u003efile txt.dd\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e为大端的jffs文件系统：\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://image-1253434595.cos.ap-chengdu.myqcloud.com/img/202409241121315.png\" alt=\"\"  /\u003e\r\n\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e​\tJFFS2的全名为JournallingFlashFileSystemVersion2（闪存日志型文件系统第2版），其功能就是管理在MTD设备上实现的日志型文件系统。与其他的存储设备存储方案相比，JFFS2并不准备提供让传统文件系统也可以使用此类设备的转换层。它只会直接在MTD设备上实现日志结构的文件系统。JFFS2会在安装的时候，扫描MTD设备的日志内容，并在RAM中重新建立文件系统结构本身。\u003c/p\u003e","title":"Jffs2镜像挂载过程"},{"content":"一般ssh远程执行命令\nssh root@121.5.106.25 -p 2333 \u0026quot;df -h\u0026quot;\n想要dd磁盘镜像到本地只需要加“|”管道符号，举个栗子 镜像/tmp/1.dd\nssh root@192.168.253.145 -p 2333 \u0026quot;sudo dd if=/tmp/1.dd\u0026quot; | dd of=/root/1.image\n带压缩的命令\n远程主机上dd if=/dev/sda | gzip -1 - | ssh user@local dd of=image.gz\n本地主机上ssh user@remote \u0026quot;dd if=/dev/sda | gzip -1 -\u0026quot; | dd of=image.gz\n#gzip -1 压缩级别 最高到9 默认是6级别\n#可以pv用来监视大型dd操作的进度，dd if=/dev/sda | gzip -1 - | pv | ssh user@local dd of=image.gz\n#较新的dd版本也可以用status=progress来查看进度\n","permalink":"http://localhost:1313/posts/%E8%BF%9C%E7%A8%8Bdd%E5%91%BD%E4%BB%A4/","summary":"\u003cp\u003e一般ssh远程执行命令\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003essh root@121.5.106.25 -p 2333 \u0026quot;df -h\u0026quot;\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://image-1253434595.cos.ap-chengdu.myqcloud.com/img/1689321748984-6e07ce8d-63bf-4867-a159-b23c93e6cbde.png\" alt=\"\"  /\u003e\r\n\u003c/p\u003e\n\u003cp\u003e想要dd磁盘镜像到本地只需要加“|”管道符号，举个栗子  镜像/tmp/1.dd\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003essh root@192.168.253.145 -p 2333 \u0026quot;sudo dd if=/tmp/1.dd\u0026quot; | dd of=/root/1.image\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://image-1253434595.cos.ap-chengdu.myqcloud.com/img/1689321786209-5bb22927-9e7b-4a93-9b37-56c8748e73fe.png\" alt=\"\"  /\u003e\r\n\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://image-1253434595.cos.ap-chengdu.myqcloud.com/img/1718259086439-2de5ca12-58df-4af1-9678-70396cb721f3.png\" alt=\"\"  /\u003e\r\n\u003c/p\u003e\n\u003cp\u003e带压缩的命令\u003c/p\u003e\n\u003cp\u003e远程主机上\u003ccode\u003edd if=/dev/sda | gzip -1 - | ssh user@local dd of=image.gz\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e本地主机上\u003ccode\u003essh user@remote \u0026quot;dd if=/dev/sda | gzip -1 -\u0026quot; | dd of=image.gz\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003cfont style=\"color:rgb(82, 82, 82);\"\u003e#gzip -1 压缩级别 最高到9 默认是6级别\u003c/font\u003e\u003c/p\u003e\n\u003cp\u003e#可以pv用来监视大型dd操作的进度，\u003ccode\u003edd if=/dev/sda | gzip -1 - | pv | ssh user@local dd of=image.gz\u003c/code\u003e\u003c/p\u003e","title":"远程dd命令"},{"content":"内存（RAM）是易失性数据，表现在当系统断电时候擦除，内存取证对寻找是否存在恶意程序有重要帮助。\n原则 1、无损原则 防止由于对设备、系统的操作而损毁某些电子证据，造成证据收集不充分，在取证的过程中，不能对涉案设备、系统进行任何修改操作，以维护涉案设备、运行环境等全部信息的完整状态。 2、完整原则 在取证与鉴定过程中，应该尽可能地全面调查取证，认真分析电子证据的来源并进行全方位、多角度的取证和分析，在确保证据与案件事实关联的基础上，将获得的所有电子证据结合案件的其他证据，相互印证，排除矛盾的电子证据，最终形成完整的证据链条。 3、及时原则 随着系统时间的推移，如日志覆盖、C\u0026amp;C存活时间等，信息都会或多或少产生变化，这些数据信息则不再能够如实反映案件事实。因而电子证据具有一定的时效性，在确定取证对象之后，应该尽早收集证据，保证相关电子数据没有受到任何破坏或损失，维持其与案件事实的关联性。\n步骤 1、确认取证环境，主要包括cpu架构、内存大小、系统类型及版本。 确认需求：单独进程内存 or 系统物理内存；（如果目标物理内存小于4GB，格式化为fat32就可以了。如果大于4GB，需要使用ssh远程拷贝。） 2、根据取证环境准备相应的工具，磁盘等 3、验证文件\nWindows内存转储 1）任务管理器转储文件 打开任务管理器，找打可疑进程，右键点击进程，创建转储文件。\n2）WinHex 通过使用内存winhex对目标机器的运行内存进行单个进程提取，如图所示：\n3）DumpIt DumpIt用于生成windows 32位、64位计算机物理内存转储。DumpIt绿色免安装，可以部署在usb上，快速响应应急时间。DumpIt 网上找到的开源版本比较旧（现在叫做MAGNET RAM Capture\n），DumpIt下载链接：https://www.downloadcrew.com/article/23854/dumpit\n运行DumpIt.exe程序，即可看到整个物理内存信息，输入yes即可获取整个物理内存，回显success为制作成功。\n4)FTK Imager FTK Imager 默认需要安装，这里我们可以自己制作一个便携式版本。具体过程也比较简单，在非应急 的目标主机安装FTK Imager，然后将整个安装目录(通常为\u0026quot;C:\\Program Files\\AccessData\\FTK Im ager\u0026quot;或\u0026quot;C:\\Program Files (x86)\\AccessData\\FTK Imager\u0026quot;)复制出来即可。 要提取内存，以管理员运行FTK Imager.exe Windows10及以上推荐使用ftk imager。 file-\u0026gt;Capture Memory\n5）WinPmem 项目地址：https://github.com/Velocidex/WinPmem\nWinPmem 是一个开源项目，通过直接控制设备接口，从而为获取设备内存数据提供了更多的可能性。\n执行winpmem_mini_x64_rc2.exe WINDOWS10.RAW获取系统内存转储，在程序目录中生成WINODWS.RAW\nWinPmem64 Extracting driver to C:\\Users\\admin\\AppData\\Local\\Temp\\pme1B4E.tmp Driver Unloaded. Loaded Driver C:\\Users\\admin\\AppData\\Local\\Temp\\pme1B4E.tmp. Deleting C:\\Users\\admin\\AppData\\Local\\Temp\\pme1B4E.tmp The system time is: 05:22:16 Will generate a RAW image - buffer_size_: 0x1000 CR3: 0x00001AE000 6 memory ranges: Start 0x00001000 - Length 0x0009E000 Start 0x00100000 - Length 0x7EAF8000 Start 0x7F4F8000 - Length 0x0E216000 Start 0x8FC4E000 - Length 0x00001000 Start 0x90200000 - Length 0x05D80000 Start 0x100000000 - Length 0x362800000 max_physical_memory_ 0x462800000 Acquitision mode PTE Remapping Padding from 0x00000000 to 0x00001000 pad - length: 0x1000 00% 0x00000000 . copy_memory - start: 0x1000 - end: 0x9f000 00% 0x00001000 . Padding from 0x0009F000 to 0x00100000 pad - length: 0x61000 00% 0x0009F000 . copy_memory - start: 0x100000 - end: 0x7ebf8000 .............................................. Linux下取内存转储 1）dd命令 在2.4系及以下的内核可以使用dd命令拷贝内存 本地：dd if=/dev/mem of=/tmp/mem.raw bs=1M 远程：dd if=/dev/men | ssh x.x.x.x dd of=/tmp/xxx.raw\n2）AVML 微软的Linux的便携式内存采集工具，在GitHub上有编译好的可执行文件 （https://github.com/microsoft/avml）。 支持x86_64以下版本: Ubuntu: 12.04, 14.04, 16.04, 18.04, 18.10, 19.04, 19.10, 20.04, 21.04, 22.04 Centos: 6.5, 6.6, 6.7, 6.8, 6.9, 6.10, 7.0, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.9 RHEL: 6.7, 6.8, 6.9, 7.0, 7.2, 7.3, 7.4, 7.5, 7.7, 8.5 Debian: 8, 9, 10, 11 Oracle Linux: 6.8, 6.9, 6.10, 7.3, 7.4, 7.5, 7.6, 7.9, 8.5 CBL-Mariner: 1.0 使用方法： 1.对avml添加可执行权限，avml -help可以查看帮助 2.在目标主机执行avml xxx.lime。# 默认为lime格式\n3）GDB 使用gdb实时取证，不影响当前进程运行，取证完成后进程可以继续执行。 1.准备取证介质，格式化为ext2文件系统格式（如果可以识别nfts就不需要格式化），并把脚本和gdb文件拷贝到取证介质上。 2.使用root用户登录 2.挂载取证介质，进入挂载的目录，假设我们挂载在/mnt/qz下面，对文件添加执行权限chmod +x -R /mnt/qz。 操作流程如下图：\n4）Lime+lmg： Lime最初用于 Android 设备的内存提取工作，也可以获取完整的Linux物理内存镜像, 弥补进程内存gdb获取的不足,比如内核级驱动进程dump无法获取到。结合开源内存取证分析工具Volatility，可以做很多的取证操作。 lmg是一个自动化脚本，可以利用lime、Volatility生成内存镜像和profile符号表文件。 Lmg脚本使用： 取证前查看一下内存使用情况，当swap使用率为0时取证，可以确保所有运行内存都被捕获。使用命令free -m查看：\n准备lmg-master文件包，并进入目录。 2.解压static-dwarfdump.tgz，并将dwarfdump设置为临时变量。或者采取可以编译安装dwarfdump、apt install、yum install。\n3.进入~/lmg-master/volatility-2.3/tools/linux，编译执行make命令编译模块module.dwarf。\n4.运行./lmg -y 如下图操作：\n5.结果如下\n错误常发生在，目标机没有安装内核编译环境，导致驱动编译不过。最好取证前需要准备一台虚拟机安装和目标机一致的操作系统，并安装好内核编译环境，将取证介质挂载到虚拟机上，并在取证介质的/lime/src目录下编译好lime驱动。\nVMware虚拟机内存转储 在windows中，计算机进入休眠状态后会产生hiberfil.sys内存文件，在继续使用是将文件拷贝到内存中。VMware中则是在我们虚拟机配置文件夹中生成VMEM文件。\n","permalink":"http://localhost:1313/posts/windowslinux%E5%86%85%E5%AD%98%E8%BD%AC%E5%82%A8/","summary":"\u003cp\u003e内存（RAM）是易失性数据，表现在当系统断电时候擦除，内存取证对寻找是否存在恶意程序有重要帮助。\u003c/p\u003e\n\u003ch1 id=\"原则\"\u003e原则\u003c/h1\u003e\n\u003cp\u003e1、无损原则\n防止由于对设备、系统的操作而损毁某些电子证据，造成证据收集不充分，在取证的过程中，不能对涉案设备、系统进行任何修改操作，以维护涉案设备、运行环境等全部信息的完整状态。\n2、完整原则\n在取证与鉴定过程中，应该尽可能地全面调查取证，认真分析电子证据的来源并进行全方位、多角度的取证和分析，在确保证据与案件事实关联的基础上，将获得的所有电子证据结合案件的其他证据，相互印证，排除矛盾的电子证据，最终形成完整的证据链条。\n3、及时原则\n随着系统时间的推移，如日志覆盖、C\u0026amp;C存活时间等，信息都会或多或少产生变化，这些数据信息则不再能够如实反映案件事实。因而电子证据具有一定的时效性，在确定取证对象之后，应该尽早收集证据，保证相关电子数据没有受到任何破坏或损失，维持其与案件事实的关联性。\u003c/p\u003e","title":"Windows\u0026Linux内存转储"},{"content":"solaris Solaris是Sun Microsystems研发的计算机操作系统，采用SPARC架构或X86架构，主要用于工 作站、服务器上的操作系统。\nSPARC全称为“可扩充处理器架构”（Scalable Processor ARChitecture），是RISC微处理器架 构之一，其指令集和X86有显著区别，并且有自己独有的窗口、延迟槽、过程调用特点。 SPARC架构的计算机一般用于工业、航天相关领域，其在类似IDC和一般IT场景的使用极为罕见。\ncat /etc/release # 查看系统版本 uname -r # 内核版本 ifconfig -a\t# 查看网络地址 ls -lh /etc/init.d/*\t# 查看启动脚本 crontab -l root\t# root ls -alht /etc/cron.*/*\t# cron配置文件 svcs # 查看所有服务状态 df -h # 磁盘空间使用情况 ps -efc\t# 列出所有进程 netstat -anuv -P tcp -f inet\t# 查看所有网络连接 netstat -r # 查看网络路由信息 pmap -x \u0026lt;进程ID\u0026gt; # 显示进程的内存映射 gcore \u0026lt;pid\u0026gt; -o \u0026lt;output_file\u0026gt; # 对可疑进程生成进程的core文件，可以用于gdb调试分析 dd if=/dev/mem of=/path/to/output/file bs=1M count=1\t# dd内存块（测试失败） 磁盘镜像:\nzpool list\t# 查看zfs储存池，\nzfs list\t# 查看zfs 文件系统\nformat # 查看磁盘，一般0号为系统盘，c2t0d0，zfs格式。 #存储设备可以是整个磁盘 (c1t0d0) 或单个分片 (c0t0d0s7)\n对于每个一磁盘分片，通常以cxtxdxsx表示，其中c/t/d/s的含义如下： *C代表控制器标号。控制器位于主板上面，所谓控制器，就是控制，发出命令的器件。 *T代表目标编号。 即分配给每个存储设备的一个唯一的硬件地址。 *D代表磁盘编号。 这个数字反映的是目标位置上的磁盘号，即具体的磁盘 *S代表分片编号。 通常从0～7，即分区的号码了\nroot@solaris:~# fstyp /dev/dsk/c2t0d0s1\nzfs ZFS，即 Zettabyte File System，常见于新版本的 Linux 系统，ZFS 是基于存储池的，与典型的映射物理存储设备的传统文件系统不同，ZFS 所有在存储池中的文件系统都可以使用存储池的资源。其支持自动校验数据的完整性，并对数据压缩提供了支持。ZFS 与 Raid 相组合，可以组成 Raid-z 和 Raid-z2. Raid-z 和 Raid-z2 常见于基于 Linux 系统的 NAS 设备中 ( 如 Freenas, Truenas ) ，相较于传统的几大 Raid 模式，其整合了 Raid 的优点，并将 ZFS 的高级特性也带入了 Raid 储存池。\nSolaris10默认的文件系统是ufs（Unix Filesystem），当然也可以选装zfs；Solaris11默认的文件系统是zfs（Zettabyte Filesystem）。\nZFS文件系统的英文名称为Zettabyte File System,也叫动态文件系统（Dynamic File System）,是第一个128位文件系统。最初是由Sun公司为Solaris 10操作系统开发的文件系统。作为OpenSolaris开源计划的一部分，ZFS于2005年11月发布，被Sun称为是终极文件系统。ZFS是基于存储池，与典型的映射物理存储设备的传统文件系ZFS统不同，ZFS所有在存储池中的文件系统都可以使用存储池的资源。\nZFS 是一个组合文件系统和逻辑卷管理器。\nZFS 的功能包括防止数据损坏、高存储容量 （256 ZiB）、快照和写入时复制克隆以及连续完整性检查等。\nssh root@192.168.253.138 \u0026#34;sudo dd if=/dev/dsk/c2t0d0s1\u0026#34; | dd of=./138-zfs.dd\t# 远程dd到本地 rdsk\t裸设备\ndsk\t块设备\n导出数据池\nzpool export tank\niostat -En\n磁盘挂载(失败)\nzfs与通常文件系统ufs不同，自带类似软riad的储存池，磁盘挂载空间是由储存池分配。将要浏览文件，需要将raw转化为vmdk，由vmdk仿真查看文件。\n系统盘仿真时引导失败可能需要光盘进入shell或修复。\n","permalink":"http://localhost:1313/posts/solariszfs%E5%8F%96%E8%AF%81%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","summary":"\u003ch1 id=\"solaris\"\u003esolaris\u003c/h1\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSolaris是Sun Microsystems研发的计算机操作系统，采用SPARC架构或X86架构，主要用于工 作站、服务器上的操作系统。\u003c/p\u003e\n\u003cp\u003eSPARC全称为“可扩充处理器架构”（Scalable Processor ARChitecture），是RISC微处理器架 构之一，其指令集和X86有显著区别，并且有自己独有的窗口、延迟槽、过程调用特点。 SPARC架构的计算机一般用于工业、航天相关领域，其在类似IDC和一般IT场景的使用极为罕见。\u003c/p\u003e","title":"solaris\u0026zfs取证常用命令"},{"content":"常见的IoT路由器固件一般是保存在ROM flash芯片中，flash芯片是一种只读的固态半导体存储器，无法被改变或者删除，并且不会因为电源关闭而丢失数据\n路由器固件提取，基本分为2种方法，一种是直接接触flash芯片、一种是从登录运行的路由器拷贝文件。\n获取到flash\n使用编程器（类似于读卡器）读取flash\n获取到shell\n1、proc/mtd文件保存着系统的磁盘分区信息\n2、rootfs为固件文件系统（使用dd拷贝出来）\n3、然后binwalk解包\n获取到控制台（同上）\n参考文章\nhttps://blog.csdn.net/Freedom_hzw/article/details/104216532\nhttps://paper.seebug.org/2024/\n","permalink":"http://localhost:1313/posts/iot%E5%8F%96%E8%AF%81/","summary":"\u003cp\u003e常见的IoT路由器固件一般是保存在ROM flash芯片中，flash芯片是一种只读的固态半导体存储器，无法被改变或者删除，并且不会因为电源关闭而丢失数据\u003c/p\u003e\n\u003cp\u003e路由器固件提取，基本分为2种方法，一种是直接接触flash芯片、一种是从登录运行的路由器拷贝文件。\u003c/p\u003e\n\u003cp\u003e获取到flash\u003c/p\u003e\n\u003cp\u003e使用编程器（类似于读卡器）读取flash\u003c/p\u003e\n\u003cp\u003e获取到shell\u003c/p\u003e","title":"Iot取证"},{"content":"Q：给出一封邮件的源代码属性，代码如下。解析邮件头字段并分析攻击情况:\nSign: INF.1.1\nId: 00000008\nCTime: 2022-09-08 08:41:49\nCompress: none\nEncyptType: none\nEncyptKey: otlKXGdtx8Zx4lfARufUjiCuGtpuWwyy7OfxCjwKxiziJKlLLVLE3q2pXJb7/phv+jZImN17qjdYS2m5tu0oKB83gamNsy6GEgTwPSFQSuLC+J1FHprmH4SdltDp0uQj5+9mvInjW8imQo5RPI+YQ2ZNAVD/ogRRpXL3Za34P07B7f8bP2o8f3jcbrEOcprdD6ZRm7PZ/65ooo9lAagqw0dy1e6I1Xfo1wEutRekcO6wt7S4z//sFkai0zWGnkmADcO9C7jR0OrgjKhhWhtCvGkd+4CSohuGKJ+rhK0azH36i2Yw7ZVZ24mYJ3Q51INiinpdxvHJEKAfafE7cyJLnExSbcfI5K+qOGmFLTOBpB53QzPyra0lV6yhjaA2gVyaYEbtXq5lupF8jswNvOirIvmhor6YPc9Vgro3xEKbNnhOnegbWvOzgU/giDFCdgROujW6d4xn3C4vhFM0HVqQqctKxvd+Z4fuMvIn6RsMh41kTHIebqmgNEIyR5oqzx871N/wYQPOQexIWVrrSmy3em6Y4ePNKpS3KfvfoA4R8z6ok9wmYnE2nJ+OIzeYOV/09zTgWrFWiiceW/VzzOQ2mP4aCugRyIo4AAWIWC8SR9ehz5+2KweFanLe4GiSWbyQorIhkXOh76JlHMlOFCWWYny3XmmAhD4RZPeHrVIOTTI=\nType: MAIL.EML\nSize: 214547\nAuthCode: C33AEFDB\nTime: 2022-09-08 08:41:44\nCapType: WEBMAIL\n**Owner: **sanyaic@yahoo.com.cn\nState: =?utf-8?B?77+90bbvv70=?=\nFolder:=?unicode?B?NmX2TrF7\n**X-Apparently-To: **sanyaic@yahoo.com.cn via 202.165.102.62; Thu, 06 Sep 2022 09:34:00 -0700\nReturn-Path: faisal@shammiexports.com\nReceived-SPF: none (domain of shammiexports.com does not designate permitted sender hosts) ZXNlIHByb2R1Y3RzIGluIHRoZSBhdHRhY2hlZCBwdXJjaGFzZSBvcmRlci4g TGV0IHVzIGtub3cgeW91ciBkZWxpdmVyeSB0aW1lIGFuZCBwYXltZW50IG1l dGhvZC4gV2Ugd2FpdCBmb3IgeW91ciBzb29uZXN0IHJlcGx5LiBXZSBob3Bl IHRvIGhhdmUgYSBzdWNjZXNzZnVsIGJ1c2luZXNzIHJlbGF0aW9uc2hpcC4g UmVnYXJkcywgRmFpc2FsIFNoYW1pbCBFeHBvcnRzIAEwAQEBAQN0ZXh0L2h0 bWwDAzECUXVvdGF0aW9uLnppcANhcHBsaWNhdGlvbi96aXADAzIwNA\u0026ndash;\nX-YMailISG: YNpCb2cWLDvbiZnS0sJKk5ZHUEVM7oIue8wOamMCr051abG3 leJjpFBfp9hmuuf6XxIzsbFNQ21FoEB_qCxfoxOb595_k55iwlJJZqQo4E9d 0fj.INBETvSEsF6QO_MgeLS8rfSR2FAzgIzX5zc0rkl92KJynDsJeV6bzqsm sAWVU1ezLQYaI3K_sWOsau_TCAiuvsZNrleko2t2WeXqeFLp1THJszulnlL5 SjJ2JpirEeuypLkxBjnq_wQeG3RB6DsU9.lioMpwpFWU28EGJuRxjSaOSMnL O3iVZefjDtHtep8a1ruPTFcydxTsP9iVPlihDarKsiYE709tHWYJOGQ58Enw 14.3NDcoZ9L1SPlwSvCK6_c_nnkzhauxoMRHUqn_Nh3cM6yMcZszOCWLiYvO ercavYFNs74Kxx4tWU9u6_baGjtGjZ168cWkI8_u_81UllWFPXbxEDI-\n**X-Originating-IP: **[74.54.255.142]\n**Authentication-Results: **mta1002.mail.cnb.yahoo.com from=shammiexports.com; domainkeys=neutral (no sig); from=shammiexports.com; dkim=neutral (no sig)\nReceived: from 127.0.0.1 (EHLO w12.hostriplex.com) (74.54.255.142) by mta1002.mail.cnb.yahoo.com with SMTP; Thu, 06 Sep 2022 09:33:58 -0700\nReceived: from ([41.138.186.31]) by w12.hostriplex.com with MailEnable WebMail; Thu, 6 Sep 2022 20:22:55 +0500\n**MIME-Version: **1.0\nTo: undisclosed-recipients\nFrom: faisal@shammiexports.com\nSubject: Quotation\n**Date: **Thu, 6 Sep 2022 16:22:55 +0100\nX-Priority: 3\nX-MSMail-Priority: Medium\nX-ME-Bayesian: 0.000000\nContent-Type: multipart/mixed; boundary=\u0026ldquo;part_21313866_3b71_4450_abe3_f81c23920c79\u0026rdquo;\n\u0026ndash;主要的具体字段信息已标黑\nA：\n**Date: **Thu, 6 Sep 2022 16:22:55 +0100 该邮件的创建时间\nSubject: Quotation 邮件主题\nFrom: faisal@shammiexports.com 邮件发送人\nTo: undisclosed-recipients 邮件接收人\n**MIME-Version: **1.0多用途互联网邮件扩展标准，是一种电子邮件标准\n①****Received: from ([41.138.186.31]) by w12.hostriplex.com with MailEnable WebMail; Thu, 6 Sep 2022 20:22:55 +0500\n该信息说明，邮件来自41.138.186.31（尼日利亚），然后从这里发送到w12.hostriplex.com，通过一种MailEnable WebMail协议接受，接受时间是Thu, 6 Sep 2022 20:22:55 +0500，该时区为巴基斯坦时区时间，换算成中欧时间为Thu, 6 Sep 2022 16:22:55 +0100\n②****Received: from 127.0.0.1 (EHLO w12.hostriplex.com) (74.54.255.142) by mta1002.mail.cnb.yahoo.com with SMTP; Thu, 06 Sep 2022 09:33:58 -0700\n该信息说明，邮件来自本地服务器（127.0.0.1）其计算机名为w12.hostriplex.com，其真实ip地址为74.54.255.142（美国），然后被服务器名为mta1002.mail.cnb.yahoo.com的服务器接受，通过SMTP协议，接受时间是Thu, 06 Sep 2022 09:33:58 -0700，该时区为美国山区时间，换算成中欧时间为Thu, 06 Sep 2022 17:33:58 +0100\n**Authentication-Results: **mta1002.mail.cnb.yahoo.com from=shammiexports.com; domainkeys=neutral (no sig); from=shammiexports.com; dkim=neutral (no sig)\n签名验证结果，mta1002.mail.cnb.yahoo.com接受者邮件服务器信息，from=shammiexports.com;发送者邮件服务器信息。\n**X-Originating-IP: **[74.54.255.142]\n该邮件源起的ip地址为74.54.255.142经查询，该ip地址为美国ip地址\nReceived-SPF:\n**X-Apparently-To: **sanyaic@yahoo.com.cn via 202.165.102.62; Thu, 06 Sep 2022 09:34:00 -0700\n该信息表示，邮件发送给sanyaic@yahoo.com.cn 该用户，其ip地址为202.165.102.62（北京市），时间换算为中欧时间为Thu, 06 Sep 2022 17:34:00 +0100 。\nReturn-Path: faisal@shammiexports.com\n该信息表示邮件退信的地址。\n由以上信息可以看出，该邮件传递主要路径为41.138.186.31-\u0026gt; w12.hostriplex.com(74.54.255.142)-\u0026gt; mta1002.mail.cnb.yahoo.com；再通过邮件服务器接受时间来看，基本上算是合符清理。通过Return-Path信息我们可以看出该邮件是一封退信邮件，而该邮件接受者sanyaic@yahoo.com.cn是被密送的，因为在邮件主体中to接受者非该用户，也没有看到转发cc信息。\n","permalink":"http://localhost:1313/posts/%E9%82%AE%E4%BB%B6%E5%A4%B4%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/","summary":"\u003cp\u003eQ：给出一封邮件的源代码属性，代码如下。解析邮件头字段并分析攻击情况:\u003c/p\u003e\n\u003cp\u003eSign: INF.1.1\u003c/p\u003e\n\u003cp\u003eId: 00000008\u003c/p\u003e\n\u003cp\u003eCTime: 2022-09-08 08:41:49\u003c/p\u003e\n\u003cp\u003eCompress: none\u003c/p\u003e\n\u003cp\u003eEncyptType: none\u003c/p\u003e\n\u003cp\u003eEncyptKey: otlKXGdtx8Zx4lfARufUjiCuGtpuWwyy7OfxCjwKxiziJKlLLVLE3q2pXJb7/phv+jZImN17qjdYS2m5tu0oKB83gamNsy6GEgTwPSFQSuLC+J1FHprmH4SdltDp0uQj5+9mvInjW8imQo5RPI+YQ2ZNAVD/ogRRpXL3Za34P07B7f8bP2o8f3jcbrEOcprdD6ZRm7PZ/65ooo9lAagqw0dy1e6I1Xfo1wEutRekcO6wt7S4z//sFkai0zWGnkmADcO9C7jR0OrgjKhhWhtCvGkd+4CSohuGKJ+rhK0azH36i2Yw7ZVZ24mYJ3Q51INiinpdxvHJEKAfafE7cyJLnExSbcfI5K+qOGmFLTOBpB53QzPyra0lV6yhjaA2gVyaYEbtXq5lupF8jswNvOirIvmhor6YPc9Vgro3xEKbNnhOnegbWvOzgU/giDFCdgROujW6d4xn3C4vhFM0HVqQqctKxvd+Z4fuMvIn6RsMh41kTHIebqmgNEIyR5oqzx871N/wYQPOQexIWVrrSmy3em6Y4ePNKpS3KfvfoA4R8z6ok9wmYnE2nJ+OIzeYOV/09zTgWrFWiiceW/VzzOQ2mP4aCugRyIo4AAWIWC8SR9ehz5+2KweFanLe4GiSWbyQorIhkXOh76JlHMlOFCWWYny3XmmAhD4RZPeHrVIOTTI=\u003c/p\u003e\n\u003cp\u003eType: MAIL.EML\u003c/p\u003e\n\u003cp\u003eSize: 214547\u003c/p\u003e\n\u003cp\u003eAuthCode: C33AEFDB\u003c/p\u003e\n\u003cp\u003eTime: 2022-09-08 08:41:44\u003c/p\u003e\n\u003cp\u003eCapType: WEBMAIL\u003c/p\u003e\n\u003cp\u003e**Owner: **\u003ca href=\"mailto:sanyaic@yahoo.com.cn\"\u003esanyaic@yahoo.com.cn\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eState: =?utf-8?B?77+90bbvv70=?=\u003c/p\u003e\n\u003cp\u003eFolder:=?unicode?B?NmX2TrF7\u003c/p\u003e\n\u003cp\u003e**X-Apparently-To: **\u003ca href=\"mailto:sanyaic@yahoo.com.cn\"\u003esanyaic@yahoo.com.cn\u003c/a\u003e via 202.165.102.62; Thu, 06 Sep 2022 09:34:00 -0700\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eReturn-Path:\u003c/strong\u003e \u003ca href=\"mailto:faisal@shammiexports.com\"\u003efaisal@shammiexports.com\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eReceived-SPF:\u003c/strong\u003e none (domain of shammiexports.com does not designate permitted sender hosts) ZXNlIHByb2R1Y3RzIGluIHRoZSBhdHRhY2hlZCBwdXJjaGFzZSBvcmRlci4g TGV0IHVzIGtub3cgeW91ciBkZWxpdmVyeSB0aW1lIGFuZCBwYXltZW50IG1l dGhvZC4gV2Ugd2FpdCBmb3IgeW91ciBzb29uZXN0IHJlcGx5LiBXZSBob3Bl IHRvIGhhdmUgYSBzdWNjZXNzZnVsIGJ1c2luZXNzIHJlbGF0aW9uc2hpcC4g UmVnYXJkcywgRmFpc2FsIFNoYW1pbCBFeHBvcnRzIAEwAQEBAQN0ZXh0L2h0 bWwDAzECUXVvdGF0aW9uLnppcANhcHBsaWNhdGlvbi96aXADAzIwNA\u0026ndash;\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eX-YMailISG:\u003c/strong\u003e YNpCb2cWLDvbiZnS0sJKk5ZHUEVM7oIue8wOamMCr051abG3 leJjpFBfp9hmuuf6XxIzsbFNQ21FoEB_qCxfoxOb595_k55iwlJJZqQo4E9d 0fj.INBETvSEsF6QO_MgeLS8rfSR2FAzgIzX5zc0rkl92KJynDsJeV6bzqsm sAWVU1ezLQYaI3K_sWOsau_TCAiuvsZNrleko2t2WeXqeFLp1THJszulnlL5 SjJ2JpirEeuypLkxBjnq_wQeG3RB6DsU9.lioMpwpFWU28EGJuRxjSaOSMnL O3iVZefjDtHtep8a1ruPTFcydxTsP9iVPlihDarKsiYE709tHWYJOGQ58Enw 14.3NDcoZ9L1SPlwSvCK6_c_nnkzhauxoMRHUqn_Nh3cM6yMcZszOCWLiYvO ercavYFNs74Kxx4tWU9u6_baGjtGjZ168cWkI8_u_81UllWFPXbxEDI-\u003c/p\u003e\n\u003cp\u003e**X-Originating-IP: **[74.54.255.142]\u003c/p\u003e\n\u003cp\u003e**Authentication-Results: **mta1002.mail.cnb.yahoo.com from=shammiexports.com; domainkeys=neutral (no sig); from=shammiexports.com; dkim=neutral (no sig)\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eReceived:\u003c/strong\u003e from 127.0.0.1 (EHLO w12.hostriplex.com) (74.54.255.142) by mta1002.mail.cnb.yahoo.com with SMTP; Thu, 06 Sep 2022 09:33:58 -0700\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eReceived:\u003c/strong\u003e from ([41.138.186.31]) by w12.hostriplex.com with MailEnable WebMail; Thu, 6 Sep 2022 20:22:55 +0500\u003c/p\u003e\n\u003cp\u003e**MIME-Version: **1.0\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTo:\u003c/strong\u003e undisclosed-recipients\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eFrom:\u003c/strong\u003e \u003ca href=\"mailto:faisal@shammiexports.com\"\u003efaisal@shammiexports.com\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSubject:\u003c/strong\u003e Quotation\u003c/p\u003e\n\u003cp\u003e**Date: **Thu, 6 Sep 2022 16:22:55 +0100\u003c/p\u003e","title":"邮件头分析方法"},{"content":"suid提权 上回绿盟取证时发现入侵者有部分木马是root权限运行，取证时用的apache账号，权限不够。在多处发现攻击者可能通过python进行suid提取。所以总结下攻击者可能用到的suid提权。\n1.查找root权限的二进制文件\nfind / -user root -perm -4000 -print 2\u0026gt;/dev/null\nfind / -perm -u=s -type f 2\u0026gt;/dev/null\nfind / -user root -perm -4000 -exec ls -ldb {} ;\n#SUID权限的设置只针对二进制可执行文件，可以通过chmod u+s、chmod u-s命令赋予、去掉二进制文件u权限。\n#SUID是Linux的特殊权限，u代替x执行权限，在执行时进程不是发起者，而是程序的所属者。\npython\nbash\ncp（mv、wegt同理）\n2.nmap 老版的nmap(2.02-5.21)有相互的功能\u0026ndash;interactive\nnmap\u0026gt; !sh\nsh-3.2# whoami\nroot\n3.find touch test\nfind test -exec whoami ;\n4.vim 如果vim以SUID运行，就会继承root用户的权限，可以读取系统中所有的文件\nvim/vi\n:shell\n破解用户名密码 前置条件：当前能读取/etc/passwd、/etc/shadow\nunshadow /etc/passwd /etc/shadow \u0026gt;passwd\t#使用 unshadow 命令组合 /etc/passwd 和 /etc/shadow\njohn passwd\t# 使用john破解\n另外，反弹中需要利用python模拟tty终端才能使用su命令\npython -c \u0026#34;import pty;pty.spawn(\u0026#39;/bin/bash\u0026#39;)\u0026#34; 参考\nhttps://www.cnblogs.com/hellobao/articles/17261531.html\n","permalink":"http://localhost:1313/posts/linux%E5%B8%B8%E7%94%A8%E6%8F%90%E6%9D%83/","summary":"\u003ch1 id=\"suid提权\"\u003esuid提权\u003c/h1\u003e\n\u003cp\u003e上回绿盟取证时发现入侵者有部分木马是root权限运行，取证时用的apache账号，权限不够。在多处发现攻击者可能通过python进行suid提取。所以总结下攻击者可能用到的suid提权。\u003c/p\u003e\n\u003cp\u003e1.查找root权限的二进制文件\u003c/p\u003e\n\u003cp\u003efind / -user root -perm -4000 -print 2\u0026gt;/dev/null\u003c/p\u003e\n\u003cp\u003efind / -perm -u=s -type f 2\u0026gt;/dev/null\u003c/p\u003e\n\u003cp\u003efind / -user root -perm -4000 -exec ls -ldb {} ;\u003c/p\u003e\n\u003cp\u003e#SUID权限的设置只针对二进制可执行文件，可以通过\u003ccode\u003echmod u+s\u003c/code\u003e、\u003ccode\u003echmod u-s\u003c/code\u003e命令赋予、去掉二进制文件u权限。\u003c/p\u003e","title":"Linux常用提权"},{"content":"vol3之于vol2，很大的改变就是用symbol_tables(符号表)替换了profile(配置文件)，vol3带有一个广泛的符号表库，并且可以基于内存映像本身为大多数 Windows 内存映像生成新的符号表。\nLinux确认内核版本：利用banner中关键词搜索“Linux Version”，从而再进一步选择Volatility2的Profile或者Volatility3的Symbols。\nVolatility3 Symbol Tables 所有文件都以 JSON 数据的形式存储，它们可以是. json 的纯 JSON 文件，也可以是. json.gz 或. json.xz 的压缩文件。Volatility 会在使用时自动解压它们。使用时也会将它们的内容（压缩后）缓存起来，位于用户主目录下的. cache/volatility3 中，以及其他有用的数据。缓存目录目前无法更改。\n符号表 JSON 文件默认位于 volatility/symbols 下，在操作系统目录下（目前是 windows、mac 或 linux 中的一种）。符号目录是可以在框架内配置的，通常可以在用户界面上设置。\n这些文件也可以被压缩成 ZIP 文件，Volatility 将处理 ZIP 文件以定位符号文件。ZIP 文件必须以相应的操作系统命名（如 linux.zip、mac.zip 或 windows.zip）。在 ZIP 文件中，目录结构应与未压缩的操作系统目录一致。\nWindows 符号表对于 Windows 系统，Volatility 接受由 GUID 和所需 PDB 文件的 Age 组成的字符串。然后，它在 Windows 子目录下的已配置符号目录下搜索所有文件。与文件名模式 /-.json（或任何压缩变体）匹配的任何文件都会被使用。如果找不到这样的符号表，则将从 Microsoft 的 Symbol Server 下载关联的 PDB 文件，并将其转换为适当的 JSON 格式，并将其保存在正确的位置。Windows 符号表可以从适当的 PDB 文件手动构建。用于执行此操作的主要工具内置于 Volatility 3 中，称为 pdbconv.py。 Mac / Linux 符号表对于 Mac / Linux 系统，两者都使用相同的识别机制。JSON 文件位于符号目录下的 linux 或 mac 目录下。生成的文件包含一个标识字符串（操作系统横幅），Volatility 的 automagic 可以检测到该字符串。易失性会缓存字符串和它们来自的符号表之间的映射，这意味着精确的文件名无关紧要，并且可以在操作系统目录下的任何必要层次结构下进行组织。可以使用称为 dwarf2json 的工具从 DWARF 文件生成 Linux 和 Mac 符号表。当前，带有调试符号的内核是恢复大多数 Volatility 插件所需的所有信息的唯一合适方法。找到具有调试符号 / 适当的 DWARF 文件的内核之后，dwarf2json 会将其转换为适当的 JSON 文件。 一般情况Windows符号文件会自动从微软下载，Linux、mac需要自己生成。也可以自行到第三方下载：\n开源的 profile 在线搜索列表\nhttps://isf-server.techanarchy.net/ https://github.com/leludo84/vol3-linux-profiles/tree/main 符号文件PDB ，也可以在其他环境良好的机器中制作Profile、Symbols，需要保持下面3点与取证目标系统一致。\n1、Linux 发行版\n2、内核版本\n3、CPU 架构（32 位、64 位等）\nVolatility2版Linux常用插件\nlinux_apihooks - 检查用户名apihooks linux_arp - 打印ARP表 linux_aslr_shift - 自动检测Linux aslr改变 linux_banner - 打印Linux Banner信息 linux_bash - 从bash进程内存中恢复bash历史记录 linux_bash_env - 恢复一个进程的动态环境变量 linux_bash_hash - 从bash进程内存中恢复bash哈希表 linux_check_afinfo - 验证网络协议的操作函数指针 linux_check_creds - 检查是否有任何进程正在共享凭证结构 linux_check_evt_arm - 检查异常向量表以查找系统调用表钩子 linux_check_fop - 检查rootkit修改的文件操作结构 linux_check_idt - 检查IDT是否被更改 linux_check_inline_kernel - 检查内联内核挂钩 linux_check_modules - 将模块列表与sysfs信息进行比较 linux_check_syscall - 检查系统调用表是否已被更改 linux_check_tty - 检查tty的钩子 linux_cpuinfo - 打印有关每个活动处理器的信息 linux_dentry_cache - 从dentry缓存收集文件 linux_dmesg - 收集dmesg buffer linux_dump_map - 将选定的内存映射写入到磁盘 linux_dynamic_env - 恢复进程的动态环境变量 linux_elfs - 在进程映射中找ELF二进制文件 linux_enumerate_files - 列出文件系统缓存引用的文件 linux_find_file - 列出并从内存中恢复文件 linux_getcwd - 列出每个进程的当前工作目录 linux_hidden_modules - Carves内存寻找隐藏的内核模块 linux_ifconfig - 收集活动接口 linux_info_regs - GDB中的“info寄存器”。它打印出所有的输出 linux_iomem - 提供与/proc/iomem相似的输出 linux_kernel_opened_files - 列出从内核中打开的文件 linux_keyboard_notifiers - 解析键盘通知调用链 linux_ldrmodules - 将proc映射的输出与libdl中的库列表进行比较 linux_library_list - 将库加载到一个进程中 linux_librarydump - 将进程内存中的共享库转储到磁盘 linux_list_raw - 列出应用程序与混杂的套接字 linux_lsmod - 收集加载内核模块 linux_lsof - 列出文件描述符及其路径 linux_malfind - 查找可疑的过程映射 linux_memmap - 转储用于linux任务的内存映射 linux_moddump - 提取加载内核模块 linux_mount - 收集挂载的fs/devices linux_mount_cache - 收集从kmem_cache安装的fs/设备。 linux_netfilter - 列出Netfilter钩子 linux_netscan - 刻画网络连接结构 linux_netstat - 列表打开的套接字 linux_pidhashtable - 通过PID哈希表枚举进程 linux_pkt_queues - 将每个进程的数据包队列写入磁盘 linux_plthook - 扫描ELF二进制文件\u0026#39; PLT hooks linux_proc_maps - 收集进程内存映射 linux_proc_maps_rb - 通过映射红黑树收集linux的进程映射 linux_procdump - 将进程的可执行映像转储到磁盘 linux_process_hollow - 检查是否有进程被挖空的迹象 linux_psaux - 收集进程和完整的命令行和开始时间 linux_psenv - 收集进程及其静态环境变量 linux_pslist - 收集活动任务通过task_struct-\u0026gt;task list linux_pslist_cache - 从kmem_cache中收集计划任务 linux_psscan - 扫描进程的物理内存 linux_pstree - 显示进程之间的父/子关系 linux_psxview - 查找隐藏进程与各种各样的进程列表 linux_recover_filesystem - 从内存中恢复整个缓存的文件系统 linux_route_cache - 从内存中恢复路由缓存 linux_sk_buff_cache - 从sk_buff kmem_cache中恢复数据包 linux_slabinfo - 在一台正在运行的机器上模拟/proc/slabinfo。 linux_strings - 将物理偏移量匹配到虚拟地址(可能需要一段时间，非常详细) linux_threads - 打印进程的线程 linux_tmpfs - 从内存中恢复tmpfs文件系统。 linux_truecrypt_passphrase - 恢复缓存Truecrypt口令 linux_vma_cache - 从vm_area_struct 缓存中收集VMAs linux_volshell - 内存映像中的shell linux_yarascan - Linux内存映像中的一个shell #列出文件列表 vol -f 1.mem --profile=LinuxUbuntu1804-5_4_0-84x64 linux_enumerate_files #-i 选项的参数是linux_enumerate_files得到的偏移量 vol -f 1.mem --profile=LinuxUbuntu1804-5_4_0-84x64 linux_find_file -i 0xf5a4e568 -O file.txt #bash历史命令 vol -f 1.mem --profile=LinuxUbuntu1804-5_4_0-84x64 linux_bash 扩展插件 aim4r/VolDiff - 利用 Volatility 框架来识别 Windows 7 内存中恶意软件威胁的 Python 脚本 JamesHabben/evolve - Web 界面版的 Volatility kevthehermit/VolUtility - Web 界面版的 Volatility andreafortuna/autotimeliner - 自动从 memory dump 中提取取证时间线 superponible/volatility-plugins 配置文件路径 volatility\\plugins\\overlays Volatility插件\nmalfind插件：\nVolatility寻找注入的代码是通过使用\u0026rsquo;malfind\u0026rsquo;功能完成的，可能包含注入代码的进程的列表，基于十六进制显示的头信息，权限和一些提取的汇编代码，需要关注红色区域，如果出现“MZ”值时，那么可能已经确定了一个恶意软件，它已经注入了另一个进程。\nps.Windows可执行文件的头在十六进制中总是以 \u0026ldquo;4D 5A \u0026ldquo;开始，在ASCII中表示为 \u0026ldquo;MZ\u0026rdquo;\npypykatz插件：用于提取Windows操作系统凭据和敏感数据，如密码哈希、明文密码以及域名和本地用户的凭据等。（https://github.com/skelsec/pypykatz-volatility3）\ndumpcerts插件：扫描证书，可以从内存镜像中提取X.509证书。证书是一种数字文件，用于验证身份、加密通讯和识别网站等，广泛用于电子商务、安全认证和网络通信等领域。通过分析内存中的证书数据，我们可以了解系统中安装的证书类型、颁发机构、有效期以及其他相关信息。\nprefetch插件：该插件正在扫描、提取和解析从 Windows XP 到 Windows 11 的 Windows Prefetch 文件。(https://www.forensicxlab.com/posts/prefetch/)\nantorun：扫描Windows自启进程\n(https://github.com/Telindus-CSIRT/volatility3-autoruns)\nvolatility-docker：用于检查内存中的dockers（https://github.com/amir9339/volatility-docker）\nThe Docker plugin has a few options:\ndetector - When choosing this option the plugin will give the investigator a quick indication about the presence of Docker / Docker containers running on the machine. ps - When choosing this option the plugin will display a table, similar to docker ps command output, that shows the following details about running containers on the machine: container creation time, running command, container-id, is privileged, container process PID. inspect-caps - When choosing this option a list of running containers will be displayed and the plugin will enumerate the containers’ capabilities. inspect-mounts - When choosing this option a list of non-default mounts will be displayed with information about the associated container, mount paths, and mount options. inspect-networks - When choosing this option a list of Docker networks will be displayed by their IP segments and the containers that are related to them. mimikatz\nhttps://github.com/RealityNet/hotoloti/blob/master/volatility/mimikatz.py python2 -m pip install construct cp mimikatz.py /volatility/plugins/ python vol.py -f tmp.vmem --profile=Win7SP1x64 mimikatz osinfos.py、recentdocs.py（https://github.com/svn0/volatility3-plugins）\n从注册表读取系统版本信息、和最近打开文档\nhttps://github.com/f-block/volatility-plugins\n快速dump：https://github.com/reverseame/modex\n官方仓库\nvolatilityfoundation/community - Volatility plugins developed and maintained by the community volatilityfoundation/community3 - Volatility3 plugins developed and maintained by the community TODO\n1、构建每个独特发行版和内核的Profile、Symbols、lime,ko\nps:VMware 注意,要复制 .vmem 和 .vmss/.vmsn 文件。在某些情况下，需要 .vmss 文件才能正确解析 .vmem 内存文件。\n参考\nhttps://github.com/ffffffff0x/1earn/blob/master/1earn/Security/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/Volatility.md\n","permalink":"http://localhost:1313/posts/vol%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8/","summary":"\u003cp\u003evol3之于vol2，很大的改变就是用symbol_tables(符号表)替换了profile(配置文件)，vol3带有一个广泛的符号表库，并且可以基于内存映像本身为大多数 Windows 内存映像生成新的\u003ca href=\"https://volatility3.readthedocs.io/en/latest/volatility3.framework.interfaces.symbols.html#volatility3.framework.interfaces.symbols.SymbolTableInterface\"\u003e符号表\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003eLinux确认内核版本：利用\u003cstrong\u003ebanner\u003c/strong\u003e中关键词搜索“\u003cstrong\u003eLinux Version\u003c/strong\u003e”，从而再进一步选择\u003cstrong\u003eVolatility2\u003c/strong\u003e的\u003cstrong\u003eProfile\u003c/strong\u003e或者\u003cstrong\u003eVolatility3\u003c/strong\u003e的\u003cstrong\u003eSymbols\u003c/strong\u003e。\u003c/p\u003e","title":"vol内存取证框架使用"},{"content":"Pyinstaller用于打包python程序到二进制文件，win下打包为exe，linux下打包为elf，mac下打包为app。x86与arm架构均支持。\nhttps://github.com/extremecoders-re/pyinstxtractor\npe\n使用脚本解包，原先打包环境为python3.7\n反编译pyc文件\npip install uncompyle6\nuncompyle6 -o xx.py xx.pyc\nelf\nreadelf -s erlfile 先查看pythondata数据地址\n解包\nhttps://bbs.kanxue.com/thread-277811.htm\n","permalink":"http://localhost:1313/posts/pyinstaller%E8%A7%A3%E5%8C%85/","summary":"\u003cp\u003ePyinstaller用于打包python程序到二进制文件，win下打包为exe，linux下打包为elf，mac下打包为app。x86与arm架构均支持。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/extremecoders-re/pyinstxtractor\"\u003ehttps://github.com/extremecoders-re/pyinstxtractor\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003epe\u003c/p\u003e\n\u003cp\u003e使用脚本解包，原先打包环境为python3.7\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://image-1253434595.cos.ap-chengdu.myqcloud.com/img/202409241330688.png\" alt=\"img\"  /\u003e\r\n\u003c/p\u003e\n\u003cp\u003e反编译pyc文件\u003c/p\u003e\n\u003cp\u003epip install uncompyle6\u003c/p\u003e\n\u003cp\u003euncompyle6 -o xx.py xx.pyc\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://image-1253434595.cos.ap-chengdu.myqcloud.com/img/202409241330809.png\" alt=\"img\"  /\u003e\r\n\u003c/p\u003e\n\u003cp\u003eelf\u003c/p\u003e\n\u003cp\u003ereadelf -s erlfile 先查看pythondata数据地址\u003c/p\u003e\n\u003cp\u003e解包\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://image-1253434595.cos.ap-chengdu.myqcloud.com/img/202409241330164.png\" alt=\"img\"  /\u003e\r\n\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://bbs.kanxue.com/thread-277811.htm\"\u003ehttps://bbs.kanxue.com/thread-277811.htm\u003c/a\u003e\u003c/p\u003e","title":"PYinstaller解包"},{"content":"\rSulv\u0026#39;s Blog\r一个记录技术、阅读、生活的博客\r👉友链格式\r名称： Sulv\u0026rsquo;s Blog 网址： https://www.sulvblog.cn 图标： https://www.sulvblog.cn/img/Q.gif 描述： 一个记录技术、阅读、生活的博客 👉友链申请要求\r秉承互换友链原则、文章定期更新、不能有太多广告、个人描述字数控制在15字内\n👉Hugo博客交流群\r787018782\n","permalink":"http://localhost:1313/links/","summary":"\u003cdiv class=\"friend\"\u003e\r\n\u003ca target=\"_blank\" href=https://www.sulvblog.cn title=Sulv\u0026#39;s\u0026#32;Blog class=\"friendurl\"\u003e\r\n  \u003cdiv class=\"frienddiv\"\u003e\r\n    \u003cdiv class=\"frienddivleft\"\u003e\r\n      \u003cimg class=\"myfriend\" src=https://www.sulvblog.cn/img/Q.gif /\u003e\r\n    \u003c/div\u003e\r\n    \u003cdiv class=\"frienddivright\"\u003e\r\n      \u003cdiv class=\"friendname\"\u003eSulv\u0026#39;s Blog\u003c/div\u003e\r\n      \u003cdiv class=\"friendinfo\"\u003e一个记录技术、阅读、生活的博客\u003c/div\u003e\r\n    \u003c/div\u003e\r\n  \u003c/div\u003e\r\n\u003c/a\u003e\r\n\n\u003c/div\u003e\r\n\u003cbr/\u003e\r\n\u003cbr/\u003e\r\n\u003cbr/\u003e\r\n\u003cbr/\u003e\r\n\u003cbr/\u003e\r\n\u003cdiv style=\"font-size: 20px;\" class=\"youlian\"\u003e👉友链格式\u003c/div\u003e\r\n\u003cdiv style=\"font-size: 16px;\"\u003e\r\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e名称：\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eSulv\u0026rsquo;s Blog\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e网址：\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003ca href=\"https://www.sulvblog.cn\"\u003ehttps://www.sulvblog.cn\u003c/a\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e图标：\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003ca href=\"https://www.sulvblog.cn/img/Q.gif\"\u003ehttps://www.sulvblog.cn/img/Q.gif\u003c/a\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e描述：\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e一个记录技术、阅读、生活的博客\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\r\n\u003cbr/\u003e\r\n\u003cdiv style=\"font-size: 20px;\"\u003e👉友链申请要求\u003c/div\u003e\r\n\u003cblockquote\u003e\n\u003cp\u003e秉承互换友链原则、文章定期更新\u003c!-- 、网站在工信部备案 --\u003e、不能有太多广告、个人描述字数控制在15字内\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cbr/\u003e\r\n\u003cdiv style=\"font-size: 20px;\"\u003e👉Hugo博客交流群\u003c/div\u003e\r\n\u003cblockquote\u003e\n\u003cp\u003e787018782\u003c/p\u003e","title":"🤝友链"},{"content":"关于我\n英文名: Kevin Xu 职业: 程序员 运动: 跑步、乒乓球、爬山 ","permalink":"http://localhost:1313/about/","summary":"\u003cp style=\"font-size: 25px;\"\u003e关于我\u003c/p\u003e\r\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e英文名:\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eKevin Xu\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e职业:\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e程序员\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e运动:\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e跑步、乒乓球、爬山\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e","title":"🙋🏻‍♂️关于"},{"content":"0x01 1、需要一台境外的vps服务器，由服务器转发数据。\n2、OpenSSH，本地如果是比较老的Windows就需要OpenSSH支持。（OpenSSH是安全 Shell (SSH) 工具的开放源代码版本，Linux 及其他非 Windows 系统的管理员使用此类工具跨平台管理远程系统。 OpenSSH 在 2018 年秋季已添加至 Windows，并包含在 Windows 10 和 Windows Server 2019 中。详见https://www.openssh.com/manual.html，这里只是用到ssh.exe）\nSSH 基于客户端-服务器体系结构，用户在其中工作的系统是客户端，所管理的远程系统是服务器。 OpenSSH 包含一系列组件和工具，用于提供一种安全且简单的远程系统管理方法，其中包括：\nsshd.exe，它是远程所管理的系统上必须运行的 SSH 服务器组件 ssh.exe，它是在用户的本地系统上运行的 SSH 客户端组件 ssh-keygen.exe，为 SSH 生成、管理和转换身份验证密钥 ssh-agent.exe，存储用于公钥身份验证的私钥 ssh-add.exe，将私钥添加到服务器允许的列表中 ssh-keyscan.exe，帮助从许多主机收集公用 SSH 主机密钥 sftp.exe，这是提供安全文件传输协议的服务，通过 SSH 运行 scp.exe 是在 SSH 上运行的文件复制实用工具 0x02 本地转发 ssh -L :: 远程转发 反弹 ssh -R :: 动态转发 ssh -D 举个栗子\nssh -fNCR :2222:127.0.0.1:22 root@121.123.312.13 -p22\n将本地的ssh-server的22端口转发到远程主机2222端口\n0x03 监听本地计算机的1080端口，走的socks5。\nTASKKILL /F /IM ssh.exe start .\\OpenSSH\\ssh -f -N -D :1080 root@45.43.37.243 -p 26122 # -N 告诉SSH客户端，这个连接不需要执行任何命令。仅仅做端口转发 # -f 告诉SSH客户端在后台运行 # -D 动态转发 # 需要使用的本地端口号 # 最后一个参数是我们用来建立隧道的中间机器的IP地址(IP: 123.123.123.123) 执行bat脚本后，输入密码就可以了\n多种应急场景下的正反向代理远程登录实现 – Zgao’s blog\n","permalink":"http://localhost:1313/posts/%E4%B8%80%E7%A7%8D%E7%AE%80%E5%8D%95%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E7%9A%84%E6%96%B9%E6%B3%95/","summary":"\u003ch2 id=\"0x01\"\u003e0x01\u003c/h2\u003e\n\u003cp\u003e1、需要一台境外的vps服务器，由服务器转发数据。\u003c/p\u003e\n\u003cp\u003e\u003cfont style=\"color:rgb(0, 0, 0);\"\u003e2、OpenSSH，\u003c/font\u003e本地如果是比较老的Windows就需要OpenSSH支持。\u003cfont style=\"color:rgb(0, 0, 0);\"\u003e（OpenSSH是安全 Shell (SSH) 工具的开放源代码版本，Linux 及其他非 Windows 系统的管理员使用此类工具跨平台管理远程系统。 OpenSSH 在 2018 年秋季已添加至 Windows，并包含在 Windows 10 和 Windows Server 2019 中。详见\u003c/font\u003e\u003ca href=\"https://www.openssh.com/manual.html\"\u003ehttps://www.openssh.com/manual.html\u003c/a\u003e\u003cfont style=\"color:rgb(0, 0, 0);\"\u003e，这里只是用到ssh.exe）\u003c/font\u003e\u003c/p\u003e","title":"一种简单科学上网的方法"},{"content":"title=\u0026ldquo;登录爱快流控路由\u0026rdquo;\r用户名 \u0026quot;or\u0026quot;\u0026quot;=\u0026quot;\u0026quot;or\u0026quot;\u0026quot;=\u0026quot; 密码无，直接点击登录\n","permalink":"http://localhost:1313/posts/ikuai-%E8%B7%AF%E7%94%B1%E5%99%A8%E4%B8%87%E8%83%BD%E5%AF%86%E7%A0%81/","summary":"\u003cp\u003etitle=\u0026ldquo;登录爱快流控路由\u0026rdquo;\u003cimg loading=\"lazy\" src=\"https://image-1253434595.cos.ap-chengdu.myqcloud.com/img/202409241342100.png\" alt=\"img\"  /\u003e\r\n\u003c/p\u003e\n\u003cp\u003e用户名 \u003ccode\u003e\u0026quot;or\u0026quot;\u0026quot;=\u0026quot;\u0026quot;or\u0026quot;\u0026quot;=\u0026quot; \u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e密码无，直接点击登录\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://image-1253434595.cos.ap-chengdu.myqcloud.com/img/202409241342170.png\" alt=\"img\"  /\u003e\r\n\u003c/p\u003e","title":"ikuai 路由器万能密码"},{"content":"ASDADSD测试 ADASD测试\nASDA测试 ADASD测试 SDASD测试\nASDASDAS测试\n","permalink":"http://localhost:1313/posts/test/","summary":"\u003ch1 id=\"asdadsd测试\"\u003eASDADSD测试\u003c/h1\u003e\n\u003cp\u003e\u003cem\u003eADASD测试\u003c/em\u003e\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eASDA测试\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eADASD测试\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eSDASD测试\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eASDASDAS测试\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"test.assets/image-20240920154939633.png\" alt=\"image-20240920154939633\"  /\u003e\r\n\u003c/p\u003e","title":"测试文档"}]